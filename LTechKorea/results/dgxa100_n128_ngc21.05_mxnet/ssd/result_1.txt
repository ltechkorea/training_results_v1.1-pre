+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
:::MLLOG {"namespace": "", "time_ms": 1621374478917, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374478923, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374478923, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374478923, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 86}}
:::MLLOG {"namespace": "", "time_ms": 1621374478923, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "128xNVIDIA DGX A100", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 90}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=128 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0500
Clearing cache on luna-0047
Clearing cache on luna-0060
Clearing cache on luna-0544
Clearing cache on luna-0553
Clearing cache on luna-0250
Clearing cache on luna-0041
Clearing cache on luna-0256
Clearing cache on luna-0240
Clearing cache on luna-0323
Clearing cache on luna-0245
Clearing cache on luna-0051
Clearing cache on luna-0554
Clearing cache on luna-0042
Clearing cache on luna-0498
Clearing cache on luna-0410
Clearing cache on luna-0045
Clearing cache on luna-0495
Clearing cache on luna-0048
Clearing cache on luna-0066
Clearing cache on luna-0046
Clearing cache on luna-0543
Clearing cache on luna-0499
Clearing cache on luna-0546
Clearing cache on luna-0331
Clearing cache on luna-0043
Clearing cache on luna-0227
Clearing cache on luna-0417
Clearing cache on luna-0552
Clearing cache on luna-0328
Clearing cache on luna-0496
Clearing cache on luna-0555
Clearing cache on luna-0414
Clearing cache on luna-0329
Clearing cache on luna-0064
Clearing cache on luna-0326
Clearing cache on luna-0550
Clearing cache on luna-0547
Clearing cache on luna-0321
Clearing cache on luna-0065
Clearing cache on luna-0548
Clearing cache on luna-0545
Clearing cache on luna-0327
Clearing cache on luna-0542
Clearing cache on luna-0059
Clearing cache on luna-0254
Clearing cache on luna-0557
Clearing cache on luna-0551
Clearing cache on luna-0324
Clearing cache on luna-0251
Clearing cache on luna-0333
Clearing cache on luna-0232
Clearing cache on luna-0336
Clearing cache on luna-0560
Clearing cache on luna-0257
Clearing cache on luna-0226
Clearing cache on luna-0062
Clearing cache on luna-0490
Clearing cache on luna-0049
Clearing cache on luna-0549
Clearing cache on luna-0246
Clearing cache on luna-0236
Clearing cache on luna-0258
Clearing cache on luna-0322
Clearing cache on luna-0063
Clearing cache on luna-0325
Clearing cache on luna-0249
Clearing cache on luna-0052
Clearing cache on luna-0558
Clearing cache on luna-0056
Clearing cache on luna-0050
Clearing cache on luna-0234
Clearing cache on luna-0497
Clearing cache on luna-0556
Clearing cache on luna-0044
Clearing cache on luna-0408
Clearing cache on luna-0225
Clearing cache on luna-0405
Clearing cache on luna-0057
Clearing cache on luna-0247
Clearing cache on luna-0332
Clearing cache on luna-0054
Clearing cache on luna-0494
Clearing cache on luna-0412
Clearing cache on luna-0228
Clearing cache on luna-0559
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
Clearing cache on luna-0491
Clearing cache on luna-0055
Clearing cache on luna-0419
Clearing cache on luna-0486
Clearing cache on luna-0415
Clearing cache on luna-0485
Clearing cache on luna-0418
Clearing cache on luna-0231
Clearing cache on luna-0237
Clearing cache on luna-0488
Clearing cache on luna-0402
Clearing cache on luna-0253
Clearing cache on luna-0244
Clearing cache on luna-0335
Clearing cache on luna-0260
Clearing cache on luna-0420
Clearing cache on luna-0243
Clearing cache on luna-0233
Clearing cache on luna-0493
Clearing cache on luna-0487
Clearing cache on luna-0407
Clearing cache on luna-0255
Clearing cache on luna-0401
Clearing cache on luna-0404
Clearing cache on luna-0239
Clearing cache on luna-0230
Clearing cache on luna-0252
Clearing cache on luna-0334
Clearing cache on luna-0411
Clearing cache on luna-0058
Clearing cache on luna-0413
Clearing cache on luna-0416
Clearing cache on luna-0489
Clearing cache on luna-0330
Clearing cache on luna-0492
Clearing cache on luna-0248
Clearing cache on luna-0242
Clearing cache on luna-0403
Clearing cache on luna-0229
Clearing cache on luna-0235
Clearing cache on luna-0406
Clearing cache on luna-0238
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=128 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1621374482932, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=8 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/lustre/fsw/mlperf-ci/23336737/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ BATCHSIZE=3
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 1 ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ NUMEPOCHS=90
+ cluster=
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ declare -a CMD
running benchmark
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
running benchmark
+ cluster=
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' -n 4 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 6 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
running benchmark
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ cluster=
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 5 ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
running benchmark
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=
running benchmark
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ cluster=selene
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=90
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
running benchmark
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ cluster=
+ cluster=
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ declare -a CMD
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ '[' -n 7 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 7 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' -n 7 ']'
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ cluster=
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 4 ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ cluster=
running benchmark
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
running benchmark
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 3 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
running benchmark
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ cluster=
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ cluster=
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
running benchmark
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ '[' -n 7 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ declare -a CMD
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
running benchmark
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' -n 4 ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ NUMEPOCHS=90
running benchmark
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ '[' -n 4 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ echo 'running benchmark'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ '[' -n 6 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' -n 3 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 0 ']'
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 2 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' -n 3 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
running benchmark
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
running benchmark
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 2 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
running benchmark
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' -n 3 ']'
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 6 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 1 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ cluster=
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ cluster=
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ declare -a CMD
running benchmark
+ cluster=
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 4 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ BATCHSIZE=3
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
running benchmark
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
running benchmark
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:48:04 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486602, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486603, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486604, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486606, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486605, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486607, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486609, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486610, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486611, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486612, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486613, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486615, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486614, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486616, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486617, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486618, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486619, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486620, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486622, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486623, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486629, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486677, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1560746868, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 195}}
:::MLLOG {"namespace": "", "time_ms": 1621374486634, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486634, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486635, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486635, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486635, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486635, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486635, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486638, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486636, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486638, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486637, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486639, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486640, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486641, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486642, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486643, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486644, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486645, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486646, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486647, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486649, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486648, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486649, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486649, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374486649, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:48:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621374486771, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1560746868, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 224}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747444, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747540, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747436, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747580, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747764, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747532, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747572, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746900, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747660, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747348, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747004, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747220, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747676, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747100, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746996, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746876, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747740, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747668, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747836, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747164, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746932, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747268, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747204, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747372, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746964, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747308, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746884, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747780, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747276, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747772, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747684, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747284, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746924, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747820, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747300, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747236, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747044, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747260, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747140, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747860, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747244, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746980, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747548, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747508, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747868, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746916, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747852, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747452, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747612, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746892, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747540
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747012, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747036, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746972, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747428, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747524, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747364, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747396, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747708, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747052, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747748, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746988, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747564, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747228, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747828, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746940, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747324, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747636, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747812, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747596, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747116, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747844, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747388, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747412, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747700, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747292, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747556, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747692, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747380, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747644, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747460, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746908, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746956, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747620, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747084, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747156, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747876, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747060, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747108, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747716, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747500, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747740
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747076, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747796, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747724, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747540, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747124, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747404, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747212, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747356, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747020, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747652, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747628, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747180, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747492, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747092, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747068, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746948, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747732, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747780
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747252, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747276
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747588, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747804, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747604, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747172, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747436
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747148, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747516, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747476, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747028, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747196, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747572
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747340, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747756, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746868, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747468, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747852
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746964
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747260
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747308
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747884, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747660
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747220
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747484, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747580
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747420, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747764
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747788, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747284
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747820
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747708, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747316, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747532
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747668
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747188, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747332, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747868
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747372
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747236
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747132, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746884
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747676, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747444
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747004
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747052
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747836
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746900
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747140
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747860
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747708
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747084
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746892
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747348
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747772
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746980
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747100
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747748
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747564
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747036
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747684
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747876
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747324
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747060
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747108
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747532, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747596
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747548
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746996
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746924
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747412
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747572, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747428
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747164
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747508
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747268
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747180
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746916
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747068
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747612
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747156
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747604
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747676
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747148
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747828
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746940
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747636
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747716
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746972
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747476
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746876
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746964, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747500
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747116
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747844
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747388
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747076
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747724
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747700
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747556
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747404
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747524
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747660, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1560747692
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747020
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747380
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746932
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747340
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747460
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747652
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746908
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746956
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747364
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747628
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747436, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747756
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747004, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747204
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747468
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747092
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747580, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1560747452
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747884
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747620
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747732
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747252
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747588
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747804
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747172
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747484
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746988
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747516
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747420
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746876, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747812
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747788
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747740, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747028
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747316
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747124
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747196
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747212
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747356
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747188
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747332
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747644
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1560747492
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560746868
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747396
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747668, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747244
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747012
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747268, start_epoch=1, synthetic=FalseINFO:root:Seed: 1560747228
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747796
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747260, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747292
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747308, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746884, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747780, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747276, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747348, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Seed: 1560747540
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747044
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1560746948
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747772, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1560747132
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747284, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746996, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747820, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747836, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747164, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746932, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747868, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747372, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747300, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747852, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746900, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747860, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747276
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747220, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746980, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747100, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747684, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747764, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747788, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746924, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1560747572
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747508, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747204, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747236, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747260
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747308
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747660
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747444, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747052, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747580
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747748, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747564, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747036, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746972, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 840
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747596, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747548, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 864
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 792
Seed: 1560747740
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1560747532
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747668
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747460, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1560747868
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747364, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1560747300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747044, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747452, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747140, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
Seed: 1560746884
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 744
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747612, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747084, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746892, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 912
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747444
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747156, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1560747004
INFO:root:MPI global rank: 216
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 384
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746988, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747012, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747828, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747876, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747324, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747060, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747636, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747108, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747388, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747076, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 408
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747796, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747724, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747412, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747700, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747556, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747428, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747524, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 720
Seed: 1560747836
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747380, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 24
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 936
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747180, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746916, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747852
INFO:root:fuse bn add relu: True
Seed: 1560746964
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560746900
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747068, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747140
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560747860
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747620, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747732, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Seed: 1560747708
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 576
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747588, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Seed: 1560747348
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747604, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747172, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Seed: 1560747436
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747220
INFO:root:MPI size: 1024
Seed: 1560747772
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747244, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560746980
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747148, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 288
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747564
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747516, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 480
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747228, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Seed: 1560747036
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1560747684
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 672
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746940, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747716, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747764
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747812, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747476, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Seed: 1560747596
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1560746996
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747500, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747116, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560746924
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747844, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 736
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747028, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747124, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747292, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747404, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 304
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747212, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1560747164
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747692, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747020, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747340, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747652, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746908, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 568
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746956, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Seed: 1560747268
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 136
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747628, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747756, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747492, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746868, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Seed: 1560747372
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747468, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747396, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747092, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Seed: 1560747236
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747068
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560746948, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:MPI global rank: 352
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747884, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747780
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747252, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747804, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1560747156
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747052
INFO:root:MPI global rank: 184
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747484, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747676
precision: fp16
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747148
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747420, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Seed: 1560747828
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747636
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 904
Seed: 1560746972
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1560747284
INFO:root:[SSD] fuse bn relu: True
Seed: 1560746876
precision: fp16
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 1560747388
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747076
INFO:root:fuse bn relu: True
Seed: 1560747820
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 616
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747724
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747316, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747700
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1560747556
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747196, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747356, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Seed: 1560747524
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747188, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 712
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747332, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747644, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Seed: 1560746932
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560747460
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI global rank: 376
Seed: 1560747364
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1560747204
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 808
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1560747132, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI size: 1024
Seed: 1560747732
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 112
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747588
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
Seed: 1560747172
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI global rank: 280
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1560747100
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747748
INFO:root:MPI local rank: 0
Seed: 1560746988
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560747516
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 1560747876
INFO:root:MPI global rank: 232
Seed: 1560747324
INFO:root:bn group: 8
Seed: 1560747060
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747108
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1560747812
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747548
INFO:root:async validation: True
Seed: 1560747788
INFO:root:MPI size: 1024
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI global rank: 880
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1560747028
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747124
INFO:root:MPI local rank: 0
Seed: 1560747412
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1560747644
precision: fp16
INFO:root:MPI size: 1024
Seed: 1560747508
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1560747180
INFO:root:MPI global rank: 120
Seed: 1560746916
INFO:root:bn group: 8
Seed: 1560747492
INFO:root:loss scaling: 128.0
Seed: 1560746868
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747396
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 696
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1560747612
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn relu: True
Seed: 1560747084
INFO:root:[SSD] fuse bn relu: True
Seed: 1560746892
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1560747604
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1560747244
INFO:root:MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI size: 1024
Seed: 1560747012
INFO:root:loss scaling: 128.0
Seed: 1560747228
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560746940
INFO:root:MPI global rank: 648
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1560747716
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747476
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747500
INFO:root:bn group: 8
Seed: 1560747116
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747844
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
Seed: 1560747796
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 360
Seed: 1560747292
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747404
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1560747428
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1560747692
INFO:root:MPI global rank: 168
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747380
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1560747340
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1560747652
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560746908
INFO:root:async validation: True
Seed: 1560746956
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1560747628
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560747756
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 552
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1560747468
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
Seed: 1560747092
INFO:root:async validation: True
Seed: 1560747044
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 960
Seed: 1560747452
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
Seed: 1560746948
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1560747884
INFO:root:fuse bn add relu: True
Seed: 1560747132
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:async validation: True
Seed: 1560747620
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
Seed: 1560747252
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747804
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 816
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1560747484
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:async validation: True
Seed: 1560747420
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:MPI global rank: 1008
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1560747316
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI global rank: 72
Seed: 1560747196
INFO:root:MPI size: 1024
Seed: 1560747212
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1560747356
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 456
Seed: 1560747188
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1560747020
INFO:root:fuse bn relu: True
Seed: 1560747332
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 192
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 768
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 240
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 848
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 104
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI global rank: 896
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI global rank: 944
fuse bn relu: True
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI global rank: 608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:MPI global rank: 728
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:MPI global rank: 680
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 920
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI global rank: 416
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI global rank: 128
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 632
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 248
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI local rank: 0
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 840
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
async validation: True
INFO:root:MPI size: 1024
MPI global rank: 752
INFO:root:bn all reduce fp16: False
MPI global rank: 864
INFO:root:fuse bn relu: True
MPI global rank: 792
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:MPI global rank: 872
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 56
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 976
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 520
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 744
INFO:root:bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 208
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn all reduce fp16: False
MPI global rank: 912
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:bn group: 8
MPI global rank: 216
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI global rank: 952
MPI global rank: 384
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:async validation: True
bn group: 8
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI global rank: 928
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn relu: True
MPI global rank: 408
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 856
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 448
MPI global rank: 720
INFO:root:bn group: 8
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 24
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 936
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI global rank: 256
MPI local rank: 0
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 544
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 576
INFO:root:MPI global rank: 832
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI global rank: 664
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 288
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 424
MPI local rank: 0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 480
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:async validation: True
MPI global rank: 672
INFO:root:MPI global rank: 688
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
async validation: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:MPI global rank: 328
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI global rank: 736
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 536
MPI local rank: 0
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI global rank: 304
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:MPI global rank: 704
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 560
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI global rank: 568
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI global rank: 136
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 344
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI global rank: 488
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 352
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
async validation: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI global rank: 800
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 656
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 184
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:async validation: True
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI global rank: 904
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 320
fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 616
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 968
fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:bn group: 8
MPI size: 1024
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 712
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 296
MPI size: 1024
INFO:root:MPI global rank: 824
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI global rank: 376
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn group: 8
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 808
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI global rank: 152
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI global rank: 112
INFO:root:MPI global rank: 464
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 776
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI global rank: 280
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 512
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 232
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 880
INFO:root:MPI global rank: 64
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI global rank: 120
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 472
MPI local rank: 0
INFO:root:MPI global rank: 592
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:MPI local rank: 0
async validation: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 696
INFO:root:MPI global rank: 784
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
MPI global rank: 144
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 40
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 648
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:loss scaling: 128.0
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI global rank: 640
loss scaling: 128.0
INFO:root:MPI global rank: 88
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
bn group: 8
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI global rank: 360
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI global rank: 400
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI global rank: 168
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI global rank: 1000
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 552
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
async validation: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 960
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI global rank: 760
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI global rank: 816
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 312
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 1008
INFO:root:loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 888
bn group: 8
INFO:root:loss scaling: 128.0
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 72
INFO:root:bn group: 8
MPI size: 1024
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 456
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 48
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:MPI global rank: 336
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI global rank: 624
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 192
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 0
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
MPI global rank: 768
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 240
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] bn group: 8
MPI global rank: 848
INFO:root:MPI global rank: 504
fuse bn relu: True
INFO:root:MPI global rank: 432
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI global rank: 600
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 984
MPI global rank: 104
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 896
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
MPI global rank: 944
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:MPI global rank: 528
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 96
async validation: True
INFO:root:MPI local rank: 0
MPI global rank: 608
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI local rank: 0
INFO:root:async validation: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI global rank: 32
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:async validation: True
bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 728
INFO:root:MPI global rank: 224
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:async validation: True
MPI size: 1024
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 680
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn all reduce fp16: False
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 368
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI global rank: 920
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI global rank: 176
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
bn all reduce fp16: False
MPI size: 1024
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 416
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI global rank: 392
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 200
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
bn group: 8
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 128
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI global rank: 584
async validation: True
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:loss scaling: 128.0
async validation: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
bn group: 8
INFO:root:MPI global rank: 272
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI global rank: 632
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn all reduce fp16: False
MPI global rank: 248
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 992
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:MPI global rank: 440
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI global rank: 872
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI size: 1024
MPI global rank: 56
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI size: 1024
bn group: 8
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
async validation: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 1016
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 976
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI global rank: 264
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI global rank: 16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 520
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 208
bn all reduce fp16: False
[SSD] fuse bn relu: True
fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
async validation: True
MPI global rank: 952
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
async validation: True
MPI size: 1024
[SSD] fuse bn relu: True
bn group: 8
[SSD] network: resnet34_v1
MPI global rank: 928
MPI local rank: 0
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 160
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn relu: True
fuse bn add relu: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI global rank: 856
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] bn group: 8
async validation: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
bn group: 8
fuse bn relu: True
MPI global rank: 448
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI size: 1024
bn group: 8
async validation: True
[SSD] bn group: 8
MPI global rank: 256
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI global rank: 544
[SSD] fuse bn relu: True
fuse bn relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] fuse bn add relu: True
fuse bn add relu: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
loss scaling: 128.0
[SSD] fuse bn add relu: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] bn group: 8
bn all reduce fp16: False
[SSD] fuse bn relu: True
MPI global rank: 832
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
async validation: True
MPI global rank: 664
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
MPI size: 1024
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
MPI global rank: 424
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
MPI size: 1024
loss scaling: 128.0
[SSD] fuse bn add relu: True
[SSD] bn group: 8
async validation: True
MPI global rank: 688
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
fuse bn relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
MPI size: 1024
[SSD] bn group: 8
[SSD] fuse bn relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 328
[SSD] fuse bn add relu: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] bn group: 8
async validation: True
MPI global rank: 536
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
fuse bn add relu: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn group: 8
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn group: 8
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
[SSD] bn group: 8
MPI global rank: 704
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI size: 1024
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
MPI global rank: 560
async validation: True
[SSD] bn group: 8
MPI local rank: 0
fuse bn relu: True
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
async validation: True
bn group: 8
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
bn group: 8
MPI global rank: 344
[SSD] bn group: 8
[SSD] fuse bn add relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] bn group: 8
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 488
[SSD] network: resnet34_v1
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
async validation: True
[SSD] fuse bn relu: True
bn group: 8
bn all reduce fp16: False
fuse bn add relu: True
loss scaling: 128.0
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
MPI size: 1024
MPI global rank: 656
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 800
MPI local rank: 0
[SSD] fuse bn relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
async validation: True
async validation: True
fuse bn relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
bn all reduce fp16: False
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 320
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 968
fuse bn relu: True
async validation: True
fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
async validation: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 296
MPI global rank: 824
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI local rank: 0
fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
async validation: True
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
bn group: 8
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI size: 1024
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI global rank: 152
fuse bn add relu: True
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
async validation: True
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 464
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI local rank: 0
bn group: 8
[SSD] fuse bn relu: True
MPI size: 1024
bn all reduce fp16: False
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 776
MPI size: 1024
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 512
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI local rank: 0
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
async validation: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] fuse bn relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
loss scaling: 128.0
[SSD] fuse bn relu: True
MPI size: 1024
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 64
MPI local rank: 0
fuse bn relu: True
[SSD] bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
fuse bn add relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
fuse bn add relu: True
MPI size: 1024
MPI size: 1024
[SSD] fuse bn add relu: True
bn group: 8
MPI global rank: 472
MPI global rank: 592
[SSD] bn group: 8
bn all reduce fp16: False
MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
async validation: True
async validation: True
fuse bn relu: True
MPI global rank: 784
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
fuse bn add relu: True
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
async validation: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 40
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
fuse bn relu: True
[SSD] bn group: 8
fuse bn relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
bn all reduce fp16: False
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI size: 1024
MPI size: 1024
MPI global rank: 88
fuse bn relu: True
[SSD] bn group: 8
MPI global rank: 640
MPI local rank: 0
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
async validation: True
bn group: 8
fuse bn relu: True
async validation: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 400
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] fuse bn add relu: True
async validation: True
[SSD] bn group: 8
MPI global rank: 1000
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] fuse bn add relu: True
fuse bn add relu: True
fuse bn add relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
loss scaling: 128.0
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
MPI size: 1024
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
MPI global rank: 496
fuse bn add relu: True
[SSD] bn group: 8
MPI global rank: 760
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
MPI local rank: 0
loss scaling: 128.0
async validation: True
bn all reduce fp16: False
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI size: 1024
MPI global rank: 312
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn group: 8
[SSD] fuse bn add relu: True
async validation: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 888
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
fuse bn relu: True
fuse bn add relu: True
async validation: True
fuse bn relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
MPI size: 1024
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn add relu: True
MPI global rank: 48
fuse bn add relu: True
MPI global rank: 336
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 624
[SSD] fuse bn relu: True
bn group: 8
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
async validation: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 0
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn add relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI size: 1024
fuse bn relu: True
MPI size: 1024
MPI global rank: 432
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 504
MPI local rank: 0
fuse bn relu: True
MPI local rank: 0
bn group: 8
fuse bn add relu: True
async validation: True
async validation: True
bn all reduce fp16: False
bn group: 8
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI size: 1024
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 600
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
MPI global rank: 984
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI local rank: 0
[SSD] bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
MPI global rank: 96
MPI global rank: 528
loss scaling: 128.0
fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
async validation: True
async validation: True
bn all reduce fp16: False
MPI size: 1024
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 32
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 224
[SSD] bn group: 8
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
fuse bn relu: True
loss scaling: 128.0
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
fuse bn add relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI size: 1024
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
MPI global rank: 368
MPI local rank: 0
MPI size: 1024
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 176
async validation: True
bn group: 8
fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn group: 8
async validation: True
bn all reduce fp16: False
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 392
MPI global rank: 200
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
MPI local rank: 0
[SSD] bn group: 8
[SSD] fuse bn relu: True
async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 584
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
loss scaling: 128.0
MPI local rank: 0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
MPI global rank: 272
fuse bn relu: True
fuse bn relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
fuse bn add relu: True
bn group: 8
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
async validation: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] bn group: 8
MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI global rank: 992
MPI local rank: 0
async validation: True
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn add relu: True
loss scaling: 128.0
async validation: True
bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI global rank: 440
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
async validation: True
fuse bn relu: True
fuse bn relu: True
MPI global rank: 1016
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn add relu: True
MPI local rank: 0
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
async validation: True
bn all reduce fp16: False
bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI size: 1024
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 264
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 16
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI local rank: 0
async validation: True
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:13] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374494599, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 373}}
:::MLLOG {"namespace": "", "time_ms": 1621374494600, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 374}}
:::MLLOG {"namespace": "", "time_ms": 1621374494601, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374494601, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 32}}
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374494601, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374494601, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [68, 85], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 35}}
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374494616, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 417}}
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:48:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
:::MLLOG {"namespace": "", "time_ms": 1621374496533, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
[luna-0041:0:1986010 - context.c:581] INFO job (ID: 17873379084853178575) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986010 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x8 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986010 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x47 caps:0x16
[luna-0041:0:1986010 - comm.c:385] INFO [group#:0] group id:18 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x380a00000018) mlid:c00e
[luna-0041:0:1986010 - comm.c:385] INFO [group#:1] group id:18 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986011 - context.c:581] INFO job (ID: 17873378868669966194) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986011 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x9 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986011 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x48 caps:0x16
[luna-0041:0:1986011 - comm.c:385] INFO [group#:0] group id:19 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x390a00000019) mlid:c00f
[luna-0041:0:1986011 - comm.c:385] INFO [group#:1] group id:19 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1985999 - context.c:581] INFO job (ID: 17873379036497938345) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1985999 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xa caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1985999 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x49 caps:0x16
[luna-0041:0:1985999 - comm.c:385] INFO [group#:0] group id:1a tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3a0a0000001a) mlid:c010
[luna-0041:0:1985999 - comm.c:385] INFO [group#:1] group id:1a tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986009 - context.c:581] INFO job (ID: 17873379347001320001) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986009 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xb caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986009 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4a caps:0x16
[luna-0041:0:1986009 - comm.c:385] INFO [group#:0] group id:1b tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3b0a0000001b) mlid:c011
[luna-0041:0:1986009 - comm.c:385] INFO [group#:1] group id:1b tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986013 - context.c:581] INFO job (ID: 17873378843895442425) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986013 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x0 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986013 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x3f caps:0x16
[luna-0041:0:1986013 - comm.c:385] INFO [group#:0] group id:1c tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3c0a0000001c) mlid:c006
[luna-0041:0:1986013 - comm.c:385] INFO [group#:1] group id:1c tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986012 - context.c:581] INFO job (ID: 17873379043001025521) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986012 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986012 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x40 caps:0x16
[luna-0041:0:1986012 - comm.c:385] INFO [group#:0] group id:1d tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3d0a0000001d) mlid:c007
[luna-0041:0:1986012 - comm.c:385] INFO [group#:1] group id:1d tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986004 - context.c:581] INFO job (ID: 17873378612457006487) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986004 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x2 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986004 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x41 caps:0x16
[luna-0041:0:1986004 - comm.c:385] INFO [group#:0] group id:1e tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3e0a0000001e) mlid:c008
[luna-0041:0:1986004 - comm.c:385] INFO [group#:1] group id:1e tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1986006 - context.c:581] INFO job (ID: 17873378525638362510) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1986006 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x3 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1986006 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x42 caps:0x16
[luna-0041:0:1986006 - comm.c:385] INFO [group#:0] group id:1f tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x3f0a0000001f) mlid:c009
[luna-0041:0:1986006 - comm.c:385] INFO [group#:1] group id:1f tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv9_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv10_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv11_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv12_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374867792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_bias"}}
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1621374868362, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 522}}
:::MLLOG {"namespace": "", "time_ms": 1621374868362, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 526}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374869460, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 24, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 110}}
:::MLLOG {"namespace": "", "time_ms": 1621374869460, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3072, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 111}}
:::MLLOG {"namespace": "", "time_ms": 1621374869460, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 3, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 112}}
:::MLLOG {"namespace": "", "time_ms": 1621374869460, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 115}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374869461, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 0.504 [sec],avg speed: 231519.188 [imgs/sec],loss=19.909
[Training][Epoch 1] training time: 0.504 [sec],avg speed: 231519.188 [imgs/sec],loss=19.909
:::MLLOG {"namespace": "", "time_ms": 1621374869965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 231519.18831912187, "lr": 0.009556886227544914, "loss": 19.9087912910863}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374869965, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 231519.18831912187, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374869965, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374869965, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Epoch 2] training time: 0.320 [sec],avg speed: 364919.706 [imgs/sec],loss=10.931
[Training][Epoch 2] training time: 0.320 [sec],avg speed: 364919.706 [imgs/sec],loss=10.931
:::MLLOG {"namespace": "", "time_ms": 1621374870285, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364919.70613018796, "lr": 0.019365269461077805, "loss": 10.931372893484015}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374870286, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364919.70613018796, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374870286, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374870286, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.562 [ms], speed: 358793.711 [imgs/sec], loss=9.515
[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.562 [ms], speed: 358793.711 [imgs/sec], loss=9.515
:::MLLOG {"namespace": "", "time_ms": 1621374870474, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358793.71076047583, "loss": 9.514534950256348}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [3, 100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374870474, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358793.71076047583, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 3] training time: 0.327 [sec],avg speed: 357214.918 [imgs/sec],loss=9.524
[Training][Epoch 3] training time: 0.327 [sec],avg speed: 357214.918 [imgs/sec],loss=9.524
:::MLLOG {"namespace": "", "time_ms": 1621374870613, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357214.91769687535, "lr": 0.029173652694610752, "loss": 9.524440815574245}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374870613, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357214.91769687535, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374870613, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374870613, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Epoch 4] training time: 0.314 [sec],avg speed: 371878.975 [imgs/sec],loss=8.854
[Training][Epoch 4] training time: 0.314 [sec],avg speed: 371878.975 [imgs/sec],loss=8.854
:::MLLOG {"namespace": "", "time_ms": 1621374870927, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371878.9754919385, "lr": 0.0389820359281437, "loss": 8.854055517598203}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374870927, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371878.9754919385, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374870927, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374870927, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 0.300 [sec],avg speed: 389427.385 [imgs/sec],loss=8.454
[Training][Epoch 5] training time: 0.300 [sec],avg speed: 389427.385 [imgs/sec],loss=8.454
:::MLLOG {"namespace": "", "time_ms": 1621374871227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389427.38455322443, "lr": 0.048790419161676646, "loss": 8.454293627487985}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374871228, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389427.38455322443, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374871228, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374871238, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 5}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 192.113 [ms], allgather: 42.533 [ms], asnumpy: 6.669 [ms], speed: 20719.693 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 192.113 [ms], allgather: 42.533 [ms], asnumpy: 6.669 [ms], speed: 20719.693 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374871479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.687 [ms], speed: 353611.666 [imgs/sec], loss=7.719
[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.687 [ms], speed: 353611.666 [imgs/sec], loss=7.719
:::MLLOG {"namespace": "", "time_ms": 1621374871523, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353611.6660629014, "loss": 7.718528747558594}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [6, 200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374871523, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353611.6660629014, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 6] training time: 0.310 [sec],avg speed: 376698.473 [imgs/sec],loss=7.817
[Training][Epoch 6] training time: 0.310 [sec],avg speed: 376698.473 [imgs/sec],loss=7.817
:::MLLOG {"namespace": "", "time_ms": 1621374871789, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376698.4733174691, "lr": 0.05859880239520959, "loss": 7.817053518797222}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374871790, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376698.4733174691, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374871790, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374871790, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.304 [sec],avg speed: 384293.378 [imgs/sec],loss=7.844
[Training][Epoch 7] training time: 0.304 [sec],avg speed: 384293.378 [imgs/sec],loss=7.844
:::MLLOG {"namespace": "", "time_ms": 1621374872094, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384293.3782363168, "lr": 0.06840718562874248, "loss": 7.844433859774941}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374872094, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384293.3782363168, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374872094, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374872094, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.181 [ms], speed: 375496.609 [imgs/sec], loss=6.656
[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.181 [ms], speed: 375496.609 [imgs/sec], loss=6.656
:::MLLOG {"namespace": "", "time_ms": 1621374872315, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375496.60866543045, "loss": 6.655670166015625}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [8, 300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374872315, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375496.60866543045, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 8] training time: 0.310 [sec],avg speed: 376320.931 [imgs/sec],loss=7.396
[Training][Epoch 8] training time: 0.310 [sec],avg speed: 376320.931 [imgs/sec],loss=7.396
:::MLLOG {"namespace": "", "time_ms": 1621374872404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376320.9314550065, "lr": 0.07821556886227543, "loss": 7.3959187582919474}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374872405, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376320.9314550065, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374872405, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374872405, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Epoch 9] training time: 0.333 [sec],avg speed: 350644.979 [imgs/sec],loss=7.310
[Training][Epoch 9] training time: 0.333 [sec],avg speed: 350644.979 [imgs/sec],loss=7.310
:::MLLOG {"namespace": "", "time_ms": 1621374872738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350644.97865090566, "lr": 0.08802395209580838, "loss": 7.309943701091566}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374872738, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350644.97865090566, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374872738, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374872738, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 0.356 [sec],avg speed: 327464.747 [imgs/sec],loss=6.814
[Training][Epoch 10] training time: 0.356 [sec],avg speed: 327464.747 [imgs/sec],loss=6.814
:::MLLOG {"namespace": "", "time_ms": 1621374873095, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327464.7467561261, "lr": 0.0978323353293413, "loss": 6.814037636706703}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374873095, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327464.7467561261, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374873095, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374873105, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374873110, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374873111, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0027143751133665234, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 5}}
loading annotations into memory...
Done (t=0.10s)
creating index...
Loading and preparing results...
DONE (t=0.29s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.82s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00271
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.00726
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00173
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00455
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.00352
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.00609
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00727
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00727
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.838 [ms], allgather: 44.355 [ms], asnumpy: 7.740 [ms], speed: 51581.446 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.838 [ms], allgather: 44.355 [ms], asnumpy: 7.740 [ms], speed: 51581.446 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374873239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 12.442 [ms], speed: 246910.517 [imgs/sec], loss=5.085
[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 12.442 [ms], speed: 246910.517 [imgs/sec], loss=5.085
:::MLLOG {"namespace": "", "time_ms": 1621374873363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 246910.51726087247, "loss": 5.084823131561279}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [11, 400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374873364, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 246910.51726087247, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 11] training time: 0.352 [sec],avg speed: 331806.494 [imgs/sec],loss=6.579
[Training][Epoch 11] training time: 0.352 [sec],avg speed: 331806.494 [imgs/sec],loss=6.579
:::MLLOG {"namespace": "", "time_ms": 1621374873591, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 331806.49437328125, "lr": 0.10764071856287424, "loss": 6.57923678347939}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374873591, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 331806.49437328125, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374873591, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374873591, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 0.302 [sec],avg speed: 386450.851 [imgs/sec],loss=6.510
[Training][Epoch 12] training time: 0.302 [sec],avg speed: 386450.851 [imgs/sec],loss=6.510
:::MLLOG {"namespace": "", "time_ms": 1621374873894, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386450.8507176897, "lr": 0.11744910179640719, "loss": 6.50983981082314}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374873894, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386450.8507176897, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374873894, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374873894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.912 [ms], speed: 344709.647 [imgs/sec], loss=7.912
[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.912 [ms], speed: 344709.647 [imgs/sec], loss=7.912
:::MLLOG {"namespace": "", "time_ms": 1621374874179, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344709.64680703066, "loss": 7.911927700042725}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [13, 500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374874179, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344709.64680703066, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 13] training time: 0.341 [sec],avg speed: 341836.625 [imgs/sec],loss=6.371
[Training][Epoch 13] training time: 0.341 [sec],avg speed: 341836.625 [imgs/sec],loss=6.371
:::MLLOG {"namespace": "", "time_ms": 1621374874236, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341836.62520351313, "lr": 0.1272574850299401, "loss": 6.371481268029464}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374874236, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341836.62520351313, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374874236, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374874236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.325 [sec],avg speed: 359523.915 [imgs/sec],loss=5.895
[Training][Epoch 14] training time: 0.325 [sec],avg speed: 359523.915 [imgs/sec],loss=5.895
:::MLLOG {"namespace": "", "time_ms": 1621374874561, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359523.9146528974, "lr": 0.13706586826347306, "loss": 5.894797168279949}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374874561, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359523.9146528974, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374874561, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374874561, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 0.346 [sec],avg speed: 337362.452 [imgs/sec],loss=6.136
[Training][Epoch 15] training time: 0.346 [sec],avg speed: 337362.452 [imgs/sec],loss=6.136
:::MLLOG {"namespace": "", "time_ms": 1621374874908, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 337362.45207450236, "lr": 0.14687425149700598, "loss": 6.136248400336818}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374874908, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 337362.45207450236, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374874908, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374874919, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 15}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 51.563 [ms], allgather: 44.054 [ms], asnumpy: 7.026 [ms], speed: 48711.843 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 51.563 [ms], allgather: 44.054 [ms], asnumpy: 7.026 [ms], speed: 48711.843 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374875022, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 11.551 [ms], speed: 265947.005 [imgs/sec], loss=4.876
[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 11.551 [ms], speed: 265947.005 [imgs/sec], loss=4.876
:::MLLOG {"namespace": "", "time_ms": 1621374875196, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 265947.004652302, "loss": 4.876058101654053}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [16, 600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374875196, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 265947.004652302, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374875311, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374875312, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.01949949584936936, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 10}}
INFO:root:[Training][Epoch 16] training time: 0.412 [sec],avg speed: 283643.671 [imgs/sec],loss=5.870
[Training][Epoch 16] training time: 0.412 [sec],avg speed: 283643.671 [imgs/sec],loss=5.870
:::MLLOG {"namespace": "", "time_ms": 1621374875434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 283643.6707546394, "lr": 0.15668263473053892, "loss": 5.870049608381171}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374875434, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 283643.6707546394, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374875434, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374875434, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.320 [sec],avg speed: 365197.332 [imgs/sec],loss=5.864
[Training][Epoch 17] training time: 0.320 [sec],avg speed: 365197.332 [imgs/sec],loss=5.864
:::MLLOG {"namespace": "", "time_ms": 1621374875754, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365197.33228116, "lr": 0.16649101796407187, "loss": 5.86431464396025}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374875754, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365197.33228116, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374875754, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374875755, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 7.808 [ms], speed: 393458.744 [imgs/sec], loss=4.994
[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 7.808 [ms], speed: 393458.744 [imgs/sec], loss=4.994
:::MLLOG {"namespace": "", "time_ms": 1621374876044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393458.7443557146, "loss": 4.993518829345703}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [18, 700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374876044, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393458.7443557146, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 18] training time: 0.298 [sec],avg speed: 391174.028 [imgs/sec],loss=5.340
[Training][Epoch 18] training time: 0.298 [sec],avg speed: 391174.028 [imgs/sec],loss=5.340
:::MLLOG {"namespace": "", "time_ms": 1621374876053, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391174.0277450219, "lr": 0.1762994011976048, "loss": 5.340234831759804}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374876053, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391174.0277450219, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374876053, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374876054, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Epoch 19] training time: 0.299 [sec],avg speed: 390659.363 [imgs/sec],loss=5.329
[Training][Epoch 19] training time: 0.299 [sec],avg speed: 390659.363 [imgs/sec],loss=5.329
:::MLLOG {"namespace": "", "time_ms": 1621374876353, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390659.3632689796, "lr": 0.18610778443113773, "loss": 5.328618049621582}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374876353, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390659.3632689796, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374876353, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374876353, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 20, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374876515, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374876516, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0235278796027137, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 15}}
INFO:root:[Training][Epoch 20] training time: 0.307 [sec],avg speed: 380335.084 [imgs/sec],loss=5.208
[Training][Epoch 20] training time: 0.307 [sec],avg speed: 380335.084 [imgs/sec],loss=5.208
:::MLLOG {"namespace": "", "time_ms": 1621374876660, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 380335.08375234494, "lr": 0.19591616766467065, "loss": 5.207865307205601}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374876660, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 380335.08375234494, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374876660, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374876670, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 20}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 50.905 [ms], allgather: 29.822 [ms], asnumpy: 4.243 [ms], speed: 58843.804 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 50.905 [ms], allgather: 29.822 [ms], asnumpy: 4.243 [ms], speed: 58843.804 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374876756, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 7.931 [ms], speed: 387334.120 [imgs/sec], loss=6.400
[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 7.931 [ms], speed: 387334.120 [imgs/sec], loss=6.400
:::MLLOG {"namespace": "", "time_ms": 1621374876915, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 387334.1195709682, "loss": 6.399560451507568}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [21, 800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374876915, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 387334.1195709682, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 21] training time: 0.301 [sec],avg speed: 387236.950 [imgs/sec],loss=5.182
[Training][Epoch 21] training time: 0.301 [sec],avg speed: 387236.950 [imgs/sec],loss=5.182
:::MLLOG {"namespace": "", "time_ms": 1621374877058, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 387236.9498374736, "lr": 0.2057245508982036, "loss": 5.181966825535423}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374877058, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 387236.9498374736, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374877058, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374877058, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.297 [sec],avg speed: 392922.535 [imgs/sec],loss=5.336
[Training][Epoch 22] training time: 0.297 [sec],avg speed: 392922.535 [imgs/sec],loss=5.336
:::MLLOG {"namespace": "", "time_ms": 1621374877355, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392922.5349719207, "lr": 0.21553293413173652, "loss": 5.336238014070611}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374877356, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392922.5349719207, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374877356, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374877356, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Epoch 23] training time: 0.351 [sec],avg speed: 332807.643 [imgs/sec],loss=4.921
[Training][Epoch 23] training time: 0.351 [sec],avg speed: 332807.643 [imgs/sec],loss=4.921
:::MLLOG {"namespace": "", "time_ms": 1621374877707, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 332807.64311558125, "lr": 0.22534131736526947, "loss": 4.920823341921756}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374877707, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 332807.64311558125, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374877707, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374877707, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.959 [ms], speed: 385987.375 [imgs/sec], loss=3.872
[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.959 [ms], speed: 385987.375 [imgs/sec], loss=3.872
:::MLLOG {"namespace": "", "time_ms": 1621374877731, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385987.3749463278, "loss": 3.871938705444336}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [24, 900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374877731, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385987.3749463278, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374877817, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374877818, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.08189274468563144, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 20}}
INFO:root:[Training][Epoch 24] training time: 0.331 [sec],avg speed: 352476.324 [imgs/sec],loss=4.954
[Training][Epoch 24] training time: 0.331 [sec],avg speed: 352476.324 [imgs/sec],loss=4.954
:::MLLOG {"namespace": "", "time_ms": 1621374878038, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352476.3241225999, "lr": 0.2351497005988024, "loss": 4.953588711588006}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374878039, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352476.3241225999, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374878039, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374878039, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Epoch 25] training time: 0.305 [sec],avg speed: 382192.078 [imgs/sec],loss=4.841
[Training][Epoch 25] training time: 0.305 [sec],avg speed: 382192.078 [imgs/sec],loss=4.841
:::MLLOG {"namespace": "", "time_ms": 1621374878345, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 382192.07848255406, "lr": 0.24495808383233533, "loss": 4.841445941674082}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374878345, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 382192.07848255406, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374878345, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374878355, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 25}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.973 [ms], allgather: 30.958 [ms], asnumpy: 5.885 [ms], speed: 63437.219 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.973 [ms], allgather: 30.958 [ms], asnumpy: 5.885 [ms], speed: 63437.219 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374878434, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.689 [ms], speed: 353565.091 [imgs/sec], loss=6.884
[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.689 [ms], speed: 353565.091 [imgs/sec], loss=6.884
:::MLLOG {"namespace": "", "time_ms": 1621374878652, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353565.090717508, "loss": 6.884471893310547}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [26, 1000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374878652, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353565.090717508, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 26] training time: 0.339 [sec],avg speed: 343902.431 [imgs/sec],loss=4.893
[Training][Epoch 26] training time: 0.339 [sec],avg speed: 343902.431 [imgs/sec],loss=4.893
:::MLLOG {"namespace": "", "time_ms": 1621374878774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343902.4311698236, "lr": 0.25476646706586825, "loss": 4.892657882288883}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374878774, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343902.4311698236, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374878774, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374878774, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.363 [sec],avg speed: 321829.301 [imgs/sec],loss=4.777
[Training][Epoch 27] training time: 0.363 [sec],avg speed: 321829.301 [imgs/sec],loss=4.777
:::MLLOG {"namespace": "", "time_ms": 1621374879137, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 321829.3014220595, "lr": 0.2645748502994012, "loss": 4.777370371316609}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374879137, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 321829.3014220595, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374879137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374879138, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Epoch 28] training time: 0.318 [sec],avg speed: 367366.926 [imgs/sec],loss=4.633
[Training][Epoch 28] training time: 0.318 [sec],avg speed: 367366.926 [imgs/sec],loss=4.633
:::MLLOG {"namespace": "", "time_ms": 1621374879456, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367366.92610363604, "lr": 0.27438323353293415, "loss": 4.6326163505253035}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374879456, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367366.92610363604, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374879456, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374879456, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 7.810 [ms], speed: 393318.026 [imgs/sec], loss=4.812
[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 7.810 [ms], speed: 393318.026 [imgs/sec], loss=4.812
:::MLLOG {"namespace": "", "time_ms": 1621374879518, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393318.0264656054, "loss": 4.812175273895264}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [29, 1100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374879519, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393318.0264656054, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374879591, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374879591, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.11382996614058846, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 25}}
INFO:root:[Training][Epoch 29] training time: 0.318 [sec],avg speed: 367409.379 [imgs/sec],loss=4.825
[Training][Epoch 29] training time: 0.318 [sec],avg speed: 367409.379 [imgs/sec],loss=4.825
:::MLLOG {"namespace": "", "time_ms": 1621374879774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367409.37889985705, "lr": 0.2841916167664671, "loss": 4.825049965005172}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374879774, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367409.37889985705, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374879774, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374879774, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Epoch 30] training time: 0.332 [sec],avg speed: 351924.789 [imgs/sec],loss=4.648
[Training][Epoch 30] training time: 0.332 [sec],avg speed: 351924.789 [imgs/sec],loss=4.648
:::MLLOG {"namespace": "", "time_ms": 1621374880106, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351924.78855385794, "lr": 0.29400000000000004, "loss": 4.6478354930877686}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374880106, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351924.78855385794, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374880106, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374880117, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 30}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.914 [ms], allgather: 28.531 [ms], asnumpy: 4.658 [ms], speed: 66573.929 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.914 [ms], allgather: 28.531 [ms], asnumpy: 4.658 [ms], speed: 66573.929 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374880194, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 10.195 [ms], speed: 301319.687 [imgs/sec], loss=4.243
[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 10.195 [ms], speed: 301319.687 [imgs/sec], loss=4.243
:::MLLOG {"namespace": "", "time_ms": 1621374880499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 301319.68710220314, "loss": 4.242868900299072}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [31, 1200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374880500, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 301319.68710220314, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 31] training time: 0.394 [sec],avg speed: 296150.177 [imgs/sec],loss=4.444
[Training][Epoch 31] training time: 0.394 [sec],avg speed: 296150.177 [imgs/sec],loss=4.444
:::MLLOG {"namespace": "", "time_ms": 1621374880588, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 296150.1767031351, "lr": 0.30380838323353293, "loss": 4.443519617381849}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374880588, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 296150.1767031351, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374880588, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374880588, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Epoch 32] training time: 0.336 [sec],avg speed: 347417.514 [imgs/sec],loss=4.803
[Training][Epoch 32] training time: 0.336 [sec],avg speed: 347417.514 [imgs/sec],loss=4.803
:::MLLOG {"namespace": "", "time_ms": 1621374880924, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347417.51351811603, "lr": 0.3136167664670659, "loss": 4.80344905978755}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374880924, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347417.51351811603, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374880925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374880925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 33, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374881089, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374881089, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.12147390063940029, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 30}}
INFO:root:[Training][Epoch 33] training time: 0.311 [sec],avg speed: 374847.284 [imgs/sec],loss=4.599
[Training][Epoch 33] training time: 0.311 [sec],avg speed: 374847.284 [imgs/sec],loss=4.599
:::MLLOG {"namespace": "", "time_ms": 1621374881236, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374847.2837616234, "lr": 0.3234251497005988, "loss": 4.5992838395269295}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374881236, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374847.2837616234, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374881236, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374881237, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 7.983 [ms], speed: 384814.798 [imgs/sec], loss=5.213
[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 7.983 [ms], speed: 384814.798 [imgs/sec], loss=5.213
:::MLLOG {"namespace": "", "time_ms": 1621374881341, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384814.7980261163, "loss": 5.213233470916748}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [34, 1300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374881341, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384814.7980261163, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 34] training time: 0.300 [sec],avg speed: 389335.725 [imgs/sec],loss=4.517
[Training][Epoch 34] training time: 0.300 [sec],avg speed: 389335.725 [imgs/sec],loss=4.517
:::MLLOG {"namespace": "", "time_ms": 1621374881537, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389335.724998688, "lr": 0.33323353293413177, "loss": 4.517256241095693}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374881537, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389335.724998688, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374881537, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374881537, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Epoch 35] training time: 0.297 [sec],avg speed: 393216.947 [imgs/sec],loss=4.579
[Training][Epoch 35] training time: 0.297 [sec],avg speed: 393216.947 [imgs/sec],loss=4.579
:::MLLOG {"namespace": "", "time_ms": 1621374881834, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393216.94737070356, "lr": 0.336, "loss": 4.579388383187745}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374881834, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393216.94737070356, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374881834, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374881845, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 35}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.174 [ms], allgather: 27.768 [ms], asnumpy: 3.721 [ms], speed: 69770.178 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.174 [ms], allgather: 27.768 [ms], asnumpy: 3.721 [ms], speed: 69770.178 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374881917, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.481 [ms], speed: 362234.886 [imgs/sec], loss=3.610
[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.481 [ms], speed: 362234.886 [imgs/sec], loss=3.610
:::MLLOG {"namespace": "", "time_ms": 1621374882214, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362234.88604544685, "loss": 3.610157012939453}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [36, 1400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374882214, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362234.88604544685, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 36] training time: 0.321 [sec],avg speed: 363649.934 [imgs/sec],loss=4.793
[Training][Epoch 36] training time: 0.321 [sec],avg speed: 363649.934 [imgs/sec],loss=4.793
:::MLLOG {"namespace": "", "time_ms": 1621374882238, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363649.93422864453, "lr": 0.336, "loss": 4.792531057407982}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374882239, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363649.93422864453, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374882239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374882239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Epoch 37] training time: 0.299 [sec],avg speed: 390323.954 [imgs/sec],loss=4.033
[Training][Epoch 37] training time: 0.299 [sec],avg speed: 390323.954 [imgs/sec],loss=4.033
:::MLLOG {"namespace": "", "time_ms": 1621374882538, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390323.95448378124, "lr": 0.336, "loss": 4.033266034565474}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374882538, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390323.95448378124, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374882538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374882539, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 38, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374882802, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374882802, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.13897017771208306, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 35}}
INFO:root:[Training][Epoch 38] training time: 0.313 [sec],avg speed: 372874.154 [imgs/sec],loss=4.277
[Training][Epoch 38] training time: 0.313 [sec],avg speed: 372874.154 [imgs/sec],loss=4.277
:::MLLOG {"namespace": "", "time_ms": 1621374882852, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372874.1539150447, "lr": 0.336, "loss": 4.276727262296174}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374882852, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372874.1539150447, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374882852, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374882852, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.887 [ms], speed: 389512.545 [imgs/sec], loss=3.621
[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.887 [ms], speed: 389512.545 [imgs/sec], loss=3.621
:::MLLOG {"namespace": "", "time_ms": 1621374882994, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389512.5454863024, "loss": 3.6206235885620117}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [39, 1500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374882995, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389512.5454863024, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 39] training time: 0.300 [sec],avg speed: 389412.518 [imgs/sec],loss=4.312
[Training][Epoch 39] training time: 0.300 [sec],avg speed: 389412.518 [imgs/sec],loss=4.312
:::MLLOG {"namespace": "", "time_ms": 1621374883152, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389412.51790994685, "lr": 0.336, "loss": 4.311709014992965}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374883152, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389412.51790994685, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374883152, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374883153, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Epoch 40] training time: 0.296 [sec],avg speed: 394296.752 [imgs/sec],loss=4.394
[Training][Epoch 40] training time: 0.296 [sec],avg speed: 394296.752 [imgs/sec],loss=4.394
:::MLLOG {"namespace": "", "time_ms": 1621374883449, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 394296.75177146186, "lr": 0.336, "loss": 4.393869299637644}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374883449, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 394296.75177146186, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374883449, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374883459, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.873 [ms], allgather: 29.068 [ms], asnumpy: 4.211 [ms], speed: 67427.987 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.873 [ms], allgather: 29.068 [ms], asnumpy: 4.211 [ms], speed: 67427.987 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374883536, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.345 [sec],avg speed: 338458.749 [imgs/sec],loss=4.091
[Training][Epoch 41] training time: 0.345 [sec],avg speed: 338458.749 [imgs/sec],loss=4.091
:::MLLOG {"namespace": "", "time_ms": 1621374883881, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338458.7485744504, "lr": 0.336, "loss": 4.090738823539333}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374883881, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338458.7485744504, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374883882, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374883882, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.134 [ms], speed: 336332.600 [imgs/sec], loss=1.824
[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.134 [ms], speed: 336332.600 [imgs/sec], loss=1.824
:::MLLOG {"namespace": "", "time_ms": 1621374883891, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336332.5995301488, "loss": 1.824106216430664}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [42, 1600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374883891, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336332.5995301488, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 42] training time: 0.343 [sec],avg speed: 339968.429 [imgs/sec],loss=4.090
[Training][Epoch 42] training time: 0.343 [sec],avg speed: 339968.429 [imgs/sec],loss=4.090
:::MLLOG {"namespace": "", "time_ms": 1621374884225, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 339968.429448185, "lr": 0.336, "loss": 4.0904148377870255}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374884225, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 339968.429448185, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374884225, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374884226, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.310 [sec],avg speed: 377140.382 [imgs/sec],loss=4.331
[Training][Epoch 43] training time: 0.310 [sec],avg speed: 377140.382 [imgs/sec],loss=4.331
:::MLLOG {"namespace": "", "time_ms": 1621374884535, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377140.3815445288, "lr": 0.336, "loss": 4.330895038027513}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374884535, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377140.3815445288, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374884536, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374884536, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 44, "current_iter_num": 0}}
loading annotations into memory...
Done (t=0.13s)
creating index...
Loading and preparing results...
DONE (t=0.34s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.95s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.01950
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.04284
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.01586
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.04511
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.03747
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.05038
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.05228
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.05228
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.86s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.02353
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.05487
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.01556
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.05690
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.04279
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.05906
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.06104
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.06104
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.27s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.77s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.08189
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.17312
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.06704
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15333
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.11535
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.16592
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17294
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17294
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.81s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11383
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.22089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.10777
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19653
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20421
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21061
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21061
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.64s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12147
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.23713
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.11386
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20232
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14509
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20738
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.22s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.13897
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.26518
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13164
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23189
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16158
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23524
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24313
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24313
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.73s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.15125
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.28185
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.14876
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23263
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23789
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24682
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24682
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000:::MLLOG {"namespace": "", "time_ms": 1621374884554, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374884554, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1512509760533083, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 40}}
INFO:root:[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 7.859 [ms], speed: 390867.158 [imgs/sec], loss=3.011
[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 7.859 [ms], speed: 390867.158 [imgs/sec], loss=3.011
:::MLLOG {"namespace": "", "time_ms": 1621374884717, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390867.1583937071, "loss": 3.011082410812378}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [44, 1700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374884717, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390867.1583937071, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 44] training time: 0.301 [sec],avg speed: 387681.228 [imgs/sec],loss=4.191
[Training][Epoch 44] training time: 0.301 [sec],avg speed: 387681.228 [imgs/sec],loss=4.191
:::MLLOG {"namespace": "", "time_ms": 1621374884837, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 387681.22827545746, "lr": 0.336, "loss": 4.191010562997115}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374884837, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 387681.22827545746, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374884837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374884837, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Epoch 45] training time: 0.343 [sec],avg speed: 340440.958 [imgs/sec],loss=3.839
[Training][Epoch 45] training time: 0.343 [sec],avg speed: 340440.958 [imgs/sec],loss=3.839
:::MLLOG {"namespace": "", "time_ms": 1621374885180, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 340440.9584567505, "lr": 0.336, "loss": 3.8393783945786324}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374885181, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 340440.9584567505, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374885181, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374885191, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 45}}
INFO:root:[Validation] save_parameters: 0.000 [ms], inference: 41.474 [ms], allgather: 43.244 [ms], asnumpy: 4.151 [ms], speed: 56262.378 [imgs/sec]
[Validation] save_parameters: 0.000 [ms], inference: 41.474 [ms], allgather: 43.244 [ms], asnumpy: 4.151 [ms], speed: 56262.378 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374885280, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.355 [sec],avg speed: 328630.733 [imgs/sec],loss=4.213
[Training][Epoch 46] training time: 0.355 [sec],avg speed: 328630.733 [imgs/sec],loss=4.213
:::MLLOG {"namespace": "", "time_ms": 1621374885636, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 328630.7329387649, "lr": 0.336, "loss": 4.213407742349725}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374885636, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 328630.7329387649, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374885636, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374885636, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 7.856 [ms], speed: 391044.063 [imgs/sec], loss=5.334
[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 7.856 [ms], speed: 391044.063 [imgs/sec], loss=5.334
:::MLLOG {"namespace": "", "time_ms": 1621374885683, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391044.0633687405, "loss": 5.33447790145874}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [47, 1800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374885683, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391044.0633687405, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 47] training time: 0.370 [sec],avg speed: 315266.943 [imgs/sec],loss=3.840
[Training][Epoch 47] training time: 0.370 [sec],avg speed: 315266.943 [imgs/sec],loss=3.840
:::MLLOG {"namespace": "", "time_ms": 1621374886006, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 315266.94307534903, "lr": 0.336, "loss": 3.840234282769655}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374886007, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 315266.94307534903, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374886007, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374886007, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 48, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374886274, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374886275, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.16699770372662534, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 45}}
INFO:root:[Training][Epoch 48] training time: 0.359 [sec],avg speed: 325446.815 [imgs/sec],loss=3.804
[Training][Epoch 48] training time: 0.359 [sec],avg speed: 325446.815 [imgs/sec],loss=3.804
:::MLLOG {"namespace": "", "time_ms": 1621374886366, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 325446.81512874266, "lr": 0.336, "loss": 3.8035921391687895}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374886366, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 325446.81512874266, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374886366, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374886366, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.777 [ms], speed: 350005.484 [imgs/sec], loss=4.204
[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.777 [ms], speed: 350005.484 [imgs/sec], loss=4.204
:::MLLOG {"namespace": "", "time_ms": 1621374886612, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350005.48408577614, "loss": 4.203949451446533}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [49, 1900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374886612, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350005.48408577614, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 49] training time: 0.327 [sec],avg speed: 357100.546 [imgs/sec],loss=4.092
[Training][Epoch 49] training time: 0.327 [sec],avg speed: 357100.546 [imgs/sec],loss=4.092
:::MLLOG {"namespace": "", "time_ms": 1621374886693, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357100.5456460285, "lr": 0.336, "loss": 4.092315821271193}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374886693, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357100.5456460285, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374886693, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374886694, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Epoch 50] training time: 0.300 [sec],avg speed: 388644.407 [imgs/sec],loss=4.018
[Training][Epoch 50] training time: 0.300 [sec],avg speed: 388644.407 [imgs/sec],loss=4.018
:::MLLOG {"namespace": "", "time_ms": 1621374886994, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388644.40686409525, "lr": 0.336, "loss": 4.018042187941702}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374886994, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388644.40686409525, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374886994, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374887004, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.944 [ms], allgather: 60.976 [ms], asnumpy: 4.020 [ms], speed: 47196.162 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.944 [ms], allgather: 60.976 [ms], asnumpy: 4.020 [ms], speed: 47196.162 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374887111, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.340 [sec],avg speed: 342989.390 [imgs/sec],loss=4.128
[Training][Epoch 51] training time: 0.340 [sec],avg speed: 342989.390 [imgs/sec],loss=4.128
:::MLLOG {"namespace": "", "time_ms": 1621374887451, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342989.3898562968, "lr": 0.336, "loss": 4.127688530244325}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374887451, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342989.3898562968, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374887452, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374887452, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.148 [ms], speed: 377031.134 [imgs/sec], loss=5.541
[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.148 [ms], speed: 377031.134 [imgs/sec], loss=5.541
:::MLLOG {"namespace": "", "time_ms": 1621374887541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377031.1335839179, "loss": 5.540727138519287}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [52, 2000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374887542, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377031.1335839179, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 52] training time: 0.300 [sec],avg speed: 389705.414 [imgs/sec],loss=4.018
[Training][Epoch 52] training time: 0.300 [sec],avg speed: 389705.414 [imgs/sec],loss=4.018
:::MLLOG {"namespace": "", "time_ms": 1621374887751, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389705.4139116413, "lr": 0.336, "loss": 4.017511022718329}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374887752, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389705.4139116413, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374887752, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374887752, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 53, "current_iter_num": 0}}
INFO:root:[Training][Epoch 53] training time: 0.297 [sec],avg speed: 392456.103 [imgs/sec],loss=4.081
[Training][Epoch 53] training time: 0.297 [sec],avg speed: 392456.103 [imgs/sec],loss=4.081
:::MLLOG {"namespace": "", "time_ms": 1621374888049, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392456.1029372513, "lr": 0.336, "loss": 4.080542714972245}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374888050, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392456.1029372513, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374888050, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374888050, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 54, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374888064, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374888064, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17080348862381378, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 50}}
INFO:root:[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 7.842 [ms], speed: 391760.679 [imgs/sec], loss=4.448
[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 7.842 [ms], speed: 391760.679 [imgs/sec], loss=4.448
:::MLLOG {"namespace": "", "time_ms": 1621374888309, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391760.6789851487, "loss": 4.4478936195373535}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [54, 2100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374888309, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391760.6789851487, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 54] training time: 0.298 [sec],avg speed: 391456.122 [imgs/sec],loss=3.710
[Training][Epoch 54] training time: 0.298 [sec],avg speed: 391456.122 [imgs/sec],loss=3.710
:::MLLOG {"namespace": "", "time_ms": 1621374888348, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391456.1224449984, "lr": 0.336, "loss": 3.7102278220026115}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374888348, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391456.1224449984, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374888348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374888349, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.298 [sec],avg speed: 391643.367 [imgs/sec],loss=3.919
[Training][Epoch 55] training time: 0.298 [sec],avg speed: 391643.367 [imgs/sec],loss=3.919
:::MLLOG {"namespace": "", "time_ms": 1621374888647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391643.3674915052, "lr": 0.336, "loss": 3.9187022729923853}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374888647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391643.3674915052, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374888647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374888657, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.892 [ms], allgather: 28.937 [ms], asnumpy: 3.948 [ms], speed: 66864.088 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.892 [ms], allgather: 28.937 [ms], asnumpy: 3.948 [ms], speed: 66864.088 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374888732, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Epoch 56] training time: 0.372 [sec],avg speed: 314003.894 [imgs/sec],loss=3.949
[Training][Epoch 56] training time: 0.372 [sec],avg speed: 314003.894 [imgs/sec],loss=3.949
:::MLLOG {"namespace": "", "time_ms": 1621374889104, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 314003.89389084844, "lr": 0.336, "loss": 3.949156905475416}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374889104, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 314003.89389084844, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374889105, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374889105, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 8.720 [ms], speed: 352286.531 [imgs/sec], loss=2.130
[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 8.720 [ms], speed: 352286.531 [imgs/sec], loss=2.130
:::MLLOG {"namespace": "", "time_ms": 1621374889244, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352286.5309662834, "loss": 2.129892587661743}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [57, 2200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374889245, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352286.5309662834, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 57] training time: 0.311 [sec],avg speed: 375438.810 [imgs/sec],loss=3.540
[Training][Epoch 57] training time: 0.311 [sec],avg speed: 375438.810 [imgs/sec],loss=3.540
:::MLLOG {"namespace": "", "time_ms": 1621374889416, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375438.8102418138, "lr": 0.336, "loss": 3.540328948121322}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374889416, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375438.8102418138, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374889416, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374889416, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 58, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374889657, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374889657, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1718734392998435, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 55}}
INFO:root:[Training][Epoch 58] training time: 0.323 [sec],avg speed: 360952.486 [imgs/sec],loss=3.805
[Training][Epoch 58] training time: 0.323 [sec],avg speed: 360952.486 [imgs/sec],loss=3.805
:::MLLOG {"namespace": "", "time_ms": 1621374889740, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360952.4857971049, "lr": 0.336, "loss": 3.804702730555283}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374889740, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360952.4857971049, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374889740, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374889740, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 59, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 9.407 [ms], speed: 326576.884 [imgs/sec], loss=4.641
[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 9.407 [ms], speed: 326576.884 [imgs/sec], loss=4.641
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326576.8840153995, "loss": 4.64085578918457}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [59, 2300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326576.8840153995, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 59] training time: 0.358 [sec],avg speed: 326208.958 [imgs/sec],loss=3.603
[Training][Epoch 59] training time: 0.358 [sec],avg speed: 326208.958 [imgs/sec],loss=3.603
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326208.9582353682, "lr": 0.336, "loss": 3.602955444862968}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326208.9582353682, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374890098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.316 [sec],avg speed: 369841.883 [imgs/sec],loss=3.833
[Training][Epoch 60] training time: 0.316 [sec],avg speed: 369841.883 [imgs/sec],loss=3.833
:::MLLOG {"namespace": "", "time_ms": 1621374890414, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369841.8827567453, "lr": 0.336, "loss": 3.8328872385777926}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374890414, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369841.8827567453, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374890414, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374890425, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.486 [ms], allgather: 28.412 [ms], asnumpy: 3.891 [ms], speed: 68691.292 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.486 [ms], allgather: 28.412 [ms], asnumpy: 3.891 [ms], speed: 68691.292 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374890498, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Epoch 61] training time: 0.329 [sec],avg speed: 354547.811 [imgs/sec],loss=3.951
[Training][Epoch 61] training time: 0.329 [sec],avg speed: 354547.811 [imgs/sec],loss=3.951
:::MLLOG {"namespace": "", "time_ms": 1621374890827, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354547.8105124737, "lr": 0.336, "loss": 3.951230626357229}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374890828, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354547.8105124737, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374890828, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374890828, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 9.708 [ms], speed: 316430.934 [imgs/sec], loss=2.552
[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 9.708 [ms], speed: 316430.934 [imgs/sec], loss=2.552
:::MLLOG {"namespace": "", "time_ms": 1621374891032, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 316430.9341241877, "loss": 2.5516598224639893}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [62, 2400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374891032, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 316430.9341241877, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 62] training time: 0.337 [sec],avg speed: 346262.512 [imgs/sec],loss=3.792
[Training][Epoch 62] training time: 0.337 [sec],avg speed: 346262.512 [imgs/sec],loss=3.792
:::MLLOG {"namespace": "", "time_ms": 1621374891165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 346262.51155843714, "lr": 0.336, "loss": 3.7923357769062647}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374891165, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 346262.51155843714, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374891165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374891166, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 63, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374891423, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374891423, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17900988126908599, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.375 [sec],avg speed: 311039.711 [imgs/sec],loss=3.808
[Training][Epoch 63] training time: 0.375 [sec],avg speed: 311039.711 [imgs/sec],loss=3.808
:::MLLOG {"namespace": "", "time_ms": 1621374891541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 311039.71117548406, "lr": 0.336, "loss": 3.807987479787124}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374891541, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 311039.71117548406, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374891541, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374891542, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Epoch 64] training time: 0.326 [sec],avg speed: 358423.017 [imgs/sec],loss=3.716
[Training][Epoch 64] training time: 0.326 [sec],avg speed: 358423.017 [imgs/sec],loss=3.716
:::MLLOG {"namespace": "", "time_ms": 1621374891867, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358423.0173001566, "lr": 0.336, "loss": 3.7158092448585913}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374891868, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358423.0173001566, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374891868, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374891868, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 9.393 [ms], speed: 327036.267 [imgs/sec], loss=2.615
[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 9.393 [ms], speed: 327036.267 [imgs/sec], loss=2.615
:::MLLOG {"namespace": "", "time_ms": 1621374891905, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327036.2671133785, "loss": 2.6153364181518555}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [65, 2500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374891906, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327036.2671133785, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 65] training time: 0.311 [sec],avg speed: 375474.799 [imgs/sec],loss=3.836
[Training][Epoch 65] training time: 0.311 [sec],avg speed: 375474.799 [imgs/sec],loss=3.836
:::MLLOG {"namespace": "", "time_ms": 1621374892179, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375474.79886719445, "lr": 0.336, "loss": 3.8363041501296196}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374892179, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375474.79886719445, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374892179, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374892189, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.216 [ms], allgather: 28.541 [ms], asnumpy: 3.726 [ms], speed: 68980.952 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.216 [ms], allgather: 28.541 [ms], asnumpy: 3.726 [ms], speed: 68980.952 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374892263, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Training][Epoch 66] training time: 0.318 [sec],avg speed: 367665.406 [imgs/sec],loss=3.668
[Training][Epoch 66] training time: 0.318 [sec],avg speed: 367665.406 [imgs/sec],loss=3.668
:::MLLOG {"namespace": "", "time_ms": 1621374892580, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367665.4061966619, "lr": 0.336, "loss": 3.667637436013473}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374892580, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367665.4061966619, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374892580, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374892581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 7.758 [ms], speed: 395988.020 [imgs/sec], loss=3.095
[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 7.758 [ms], speed: 395988.020 [imgs/sec], loss=3.095
:::MLLOG {"namespace": "", "time_ms": 1621374892782, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 395988.0202552234, "loss": 3.0949535369873047}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [67, 2600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374892783, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 395988.0202552234, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 67] training time: 0.299 [sec],avg speed: 390319.909 [imgs/sec],loss=3.618
[Training][Epoch 67] training time: 0.299 [sec],avg speed: 390319.909 [imgs/sec],loss=3.618
:::MLLOG {"namespace": "", "time_ms": 1621374892880, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390319.90942768106, "lr": 0.336, "loss": 3.618212110117862}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374892880, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390319.90942768106, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374892880, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374892880, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 68, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374893173, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374893174, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19314257252274017, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 65}}
INFO:root:[Training][Epoch 68] training time: 0.302 [sec],avg speed: 386395.651 [imgs/sec],loss=3.851
[Training][Epoch 68] training time: 0.302 [sec],avg speed: 386395.651 [imgs/sec],loss=3.851
:::MLLOG {"namespace": "", "time_ms": 1621374893183, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386395.65055482206, "lr": 0.336, "loss": 3.8510972073203638}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374893183, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386395.65055482206, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374893183, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374893183, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 69, "current_iter_num": 0}}
INFO:root:[Training][Epoch 69] training time: 0.298 [sec],avg speed: 391404.489 [imgs/sec],loss=3.520
[Training][Epoch 69] training time: 0.298 [sec],avg speed: 391404.489 [imgs/sec],loss=3.520
:::MLLOG {"namespace": "", "time_ms": 1621374893481, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391404.4893540654, "lr": 0.033600000000000005, "loss": 3.5203869593770882}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374893482, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391404.4893540654, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374893482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374893482, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 70, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 7.714 [ms], speed: 398227.056 [imgs/sec], loss=5.041
[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 7.714 [ms], speed: 398227.056 [imgs/sec], loss=5.041
:::MLLOG {"namespace": "", "time_ms": 1621374893551, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 398227.056198296, "loss": 5.0408406257629395}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [70, 2700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374893552, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 398227.056198296, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 70] training time: 0.310 [sec],avg speed: 376014.591 [imgs/sec],loss=3.538
[Training][Epoch 70] training time: 0.310 [sec],avg speed: 376014.591 [imgs/sec],loss=3.538
:::MLLOG {"namespace": "", "time_ms": 1621374893792, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376014.59108994604, "lr": 0.033600000000000005, "loss": 3.538348470863543}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374893793, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376014.59108994604, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374893793, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374893803, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 70}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.022 [ms], allgather: 28.461 [ms], asnumpy: 3.789 [ms], speed: 69181.885 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.022 [ms], allgather: 28.461 [ms], asnumpy: 3.789 [ms], speed: 69181.885 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374893876, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 71, "current_iter_num": 0}}
INFO:root:[Training][Epoch 71] training time: 0.308 [sec],avg speed: 378735.244 [imgs/sec],loss=3.446
[Training][Epoch 71] training time: 0.308 [sec],avg speed: 378735.244 [imgs/sec],loss=3.446
:::MLLOG {"namespace": "", "time_ms": 1621374894184, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 378735.2435726369, "lr": 0.033600000000000005, "loss": 3.44601257223832}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374894184, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 378735.2435726369, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374894184, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374894185, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 72, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.338 [ms], speed: 368433.782 [imgs/sec], loss=5.920
[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.338 [ms], speed: 368433.782 [imgs/sec], loss=5.920
:::MLLOG {"namespace": "", "time_ms": 1621374894443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368433.78225774463, "loss": 5.920264720916748}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [72, 2800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374894444, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368433.78225774463, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 72] training time: 0.328 [sec],avg speed: 355850.115 [imgs/sec],loss=3.649
[Training][Epoch 72] training time: 0.328 [sec],avg speed: 355850.115 [imgs/sec],loss=3.649
:::MLLOG {"namespace": "", "time_ms": 1621374894513, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355850.11471771175, "lr": 0.033600000000000005, "loss": 3.6493364729379354}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374894513, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355850.11471771175, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374894513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374894513, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 73, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374894793, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374894794, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2279558298809677, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 70}}
INFO:root:[Training][Epoch 73] training time: 0.318 [sec],avg speed: 366828.023 [imgs/sec],loss=3.220
[Training][Epoch 73] training time: 0.318 [sec],avg speed: 366828.023 [imgs/sec],loss=3.220
:::MLLOG {"namespace": "", "time_ms": 1621374894832, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 366828.0231862429, "lr": 0.033600000000000005, "loss": 3.220243918268304}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374894832, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 366828.0231862429, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374894832, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374894832, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 74, "current_iter_num": 0}}
INFO:root:[Training][Epoch 74] training time: 0.336 [sec],avg speed: 347354.911 [imgs/sec],loss=3.283
[Training][Epoch 74] training time: 0.336 [sec],avg speed: 347354.911 [imgs/sec],loss=3.283
:::MLLOG {"namespace": "", "time_ms": 1621374895168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347354.91066093923, "lr": 0.033600000000000005, "loss": 3.28325418108388}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374895169, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347354.91066093923, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374895169, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374895169, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 75, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.294 [ms], speed: 370389.604 [imgs/sec], loss=3.644
[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.294 [ms], speed: 370389.604 [imgs/sec], loss=3.644
:::MLLOG {"namespace": "", "time_ms": 1621374895285, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370389.6038634646, "loss": 3.6437251567840576}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [75, 2900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374895285, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370389.6038634646, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 75] training time: 0.313 [sec],avg speed: 373210.953 [imgs/sec],loss=3.190
[Training][Epoch 75] training time: 0.313 [sec],avg speed: 373210.953 [imgs/sec],loss=3.190
:::MLLOG {"namespace": "", "time_ms": 1621374895482, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373210.95253173, "lr": 0.033600000000000005, "loss": 3.1898413269143355}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374895482, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373210.95253173, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374895482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374895492, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 75}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.740 [ms], allgather: 28.028 [ms], asnumpy: 3.719 [ms], speed: 69940.736 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.740 [ms], allgather: 28.028 [ms], asnumpy: 3.719 [ms], speed: 69940.736 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374895566, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 76, "current_iter_num": 0}}
INFO:root:[Training][Epoch 76] training time: 0.317 [sec],avg speed: 368115.421 [imgs/sec],loss=3.212
[Training][Epoch 76] training time: 0.317 [sec],avg speed: 368115.421 [imgs/sec],loss=3.212
:::MLLOG {"namespace": "", "time_ms": 1621374895883, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368115.4206553095, "lr": 0.033600000000000005, "loss": 3.212455878132268}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374895883, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368115.4206553095, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374895883, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374895884, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 77, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 9.218 [ms], speed: 333258.950 [imgs/sec], loss=4.773
[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 9.218 [ms], speed: 333258.950 [imgs/sec], loss=4.773
:::MLLOG {"namespace": "", "time_ms": 1621374896216, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 333258.95046124666, "loss": 4.772608280181885}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [77, 3000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374896216, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 333258.95046124666, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 77] training time: 0.358 [sec],avg speed: 326064.495 [imgs/sec],loss=3.580
[Training][Epoch 77] training time: 0.358 [sec],avg speed: 326064.495 [imgs/sec],loss=3.580
:::MLLOG {"namespace": "", "time_ms": 1621374896242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326064.4953357165, "lr": 0.033600000000000005, "loss": 3.579599989087958}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374896242, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326064.4953357165, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374896242, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374896242, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 78, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374896475, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374896475, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23219930394938268, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 75}}
INFO:root:[Training][Epoch 78] training time: 0.336 [sec],avg speed: 347833.631 [imgs/sec],loss=3.197
[Training][Epoch 78] training time: 0.336 [sec],avg speed: 347833.631 [imgs/sec],loss=3.197
:::MLLOG {"namespace": "", "time_ms": 1621374896578, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347833.63116694905, "lr": 0.033600000000000005, "loss": 3.196519243089776}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374896578, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347833.63116694905, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374896578, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374896579, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 547, "status": "success"}}
INFO:root:Rank 0 done. map=23.219930394938267 @ epoch=75
Rank 0 done. map=23.219930394938267 @ epoch=75

Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.71s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16700
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30426
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16817
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25192
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18117
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25871
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26759
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26759
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17080
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31644
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16769
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25153
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18113
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25779
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26648
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26648
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17187
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31267
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17181
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25635
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18410
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27103
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27103
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17901
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32542
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17914
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26331
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18746
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27037
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28006
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28006
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19314
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34837
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19474
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27472
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28187
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29164
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29164
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.66s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22796
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38768
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23498
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30922
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22102
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31546
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32579
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32579
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.66s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23220
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39241
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23981
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31386
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22340
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31945
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33024
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33024
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
ENDING TIMING RUN AT 2021-05-18 02:55:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:48:04 PM
