+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
:::MLLOG {"namespace": "", "time_ms": 1621375007113, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621375007119, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621375007119, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621375007119, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 86}}
:::MLLOG {"namespace": "", "time_ms": 1621375007119, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "128xNVIDIA DGX A100", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 90}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=128 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0021
Clearing cache on luna-0269
Clearing cache on luna-0081
Clearing cache on luna-0263
Clearing cache on luna-0027
Clearing cache on luna-0120
Clearing cache on luna-0209
Clearing cache on luna-0036
Clearing cache on luna-0121
Clearing cache on luna-0127
Clearing cache on luna-0270
Clearing cache on luna-0025
Clearing cache on luna-0273
Clearing cache on luna-0040
Clearing cache on luna-0034
Clearing cache on luna-0174
Clearing cache on luna-0031
Clearing cache on luna-0124
Clearing cache on luna-0125
Clearing cache on luna-0038
Clearing cache on luna-0113
Clearing cache on luna-0265
Clearing cache on luna-0214
Clearing cache on luna-0095
Clearing cache on luna-0178
Clearing cache on luna-0117
Clearing cache on luna-0039
Clearing cache on luna-0084
Clearing cache on luna-0126
Clearing cache on luna-0275
Clearing cache on luna-0033
Clearing cache on luna-0024
Clearing cache on luna-0037
Clearing cache on luna-0085
Clearing cache on luna-0088
Clearing cache on luna-0118
Clearing cache on luna-0186
Clearing cache on luna-0280
Clearing cache on luna-0035
Clearing cache on luna-0032
Clearing cache on luna-0175
Clearing cache on luna-0184
Clearing cache on luna-0181
Clearing cache on luna-0211
Clearing cache on luna-0086
Clearing cache on luna-0188
Clearing cache on luna-0272
Clearing cache on luna-0212
Clearing cache on luna-0215
Clearing cache on luna-0123
Clearing cache on luna-0078
Clearing cache on luna-0224
Clearing cache on luna-0030
Clearing cache on luna-0266
Clearing cache on luna-0111
Clearing cache on luna-0176
Clearing cache on luna-0179
Clearing cache on luna-0281
Clearing cache on luna-0173
Clearing cache on luna-0218
Clearing cache on luna-0276
Clearing cache on luna-0022
Clearing cache on luna-0180
Clearing cache on luna-0112
Clearing cache on luna-0192
Clearing cache on luna-0091
Clearing cache on luna-0177
Clearing cache on luna-0028
Clearing cache on luna-0079
Clearing cache on luna-0264
Clearing cache on luna-0288
Clearing cache on luna-0285
Clearing cache on luna-0094
Clearing cache on luna-0274
Clearing cache on luna-0029
Clearing cache on luna-0083
Clearing cache on luna-0128
Clearing cache on luna-0116
Clearing cache on luna-0223
Clearing cache on luna-0268
Clearing cache on luna-0026
Clearing cache on luna-0077
Clearing cache on luna-0023
Clearing cache on luna-0286
Clearing cache on luna-0287
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
Clearing cache on luna-0210
Clearing cache on luna-0096
Clearing cache on luna-0114
Clearing cache on luna-0191
Clearing cache on luna-0093
Clearing cache on luna-0090
Clearing cache on luna-0284
Clearing cache on luna-0182
Clearing cache on luna-0206
Clearing cache on luna-0185
Clearing cache on luna-0282
Clearing cache on luna-0183
Clearing cache on luna-0189
Clearing cache on luna-0082
Clearing cache on luna-0109
Clearing cache on luna-0261
Clearing cache on luna-0219
Clearing cache on luna-0213
Clearing cache on luna-0216
Clearing cache on luna-0279
Clearing cache on luna-0267
Clearing cache on luna-0207
Clearing cache on luna-0115
Clearing cache on luna-0222
Clearing cache on luna-0092
Clearing cache on luna-0119
Clearing cache on luna-0271
Clearing cache on luna-0262
Clearing cache on luna-0187
Clearing cache on luna-0122
Clearing cache on luna-0190
Clearing cache on luna-0205
Clearing cache on luna-0080
Clearing cache on luna-0089
Clearing cache on luna-0208
Clearing cache on luna-0220
Clearing cache on luna-0283
Clearing cache on luna-0277
Clearing cache on luna-0110
Clearing cache on luna-0087
Clearing cache on luna-0221
Clearing cache on luna-0278
Clearing cache on luna-0217
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=128 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1621375011268, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=8 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/lustre/fsw/mlperf-ci/23336738/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
running benchmark
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 0 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' -n 6 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ cluster=
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
running benchmark
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ cluster=
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
running benchmark
+ '[' -n 7 ']'
+ cluster=
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ '[' -n 1 ']'
running benchmark
+ cluster=
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ cluster=
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ declare -a CMD
+ declare -a CMD
running benchmark
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ cluster=
+ declare -a CMD
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
running benchmark
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ cluster=selene
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
running benchmark
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
running benchmark
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 1 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 5 ']'
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' -n 7 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ cluster=
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
running benchmark
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
running benchmark
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
running benchmark
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ LOG_INTERVAL=100
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
running benchmark
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ declare -a CMD
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
running benchmark
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ cluster=
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' -n 4 ']'
running benchmark
+ '[' -n 0 ']'
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 7 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ PARAMS+=(--async-val)
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ cluster=
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
running benchmark
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 3 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
running benchmark
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ LOG_INTERVAL=100
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 7 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ declare -a CMD
+ echo 'running benchmark'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 1 ']'
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ cluster=
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
running benchmark
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 6 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
running benchmark
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 0 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
running benchmark
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ declare -a CMD
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
running benchmark
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ declare -a CMD
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
running benchmark
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ BATCHSIZE=3
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:56:52 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014654, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014651, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014654, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014652, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014656, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014656, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014654, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014654, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014656, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014653, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014656, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014655, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014656, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014657, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014659, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014659, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014664, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014661, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014664, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014662, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014664, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014667, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014663, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014664, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014665, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014667, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014666, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014668, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014667, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014667, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014667, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014668, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014668, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014669, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014671, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014670, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014671, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014679, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014679, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014679, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014681, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014681, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014727, "event_type": "POINT_IN_TIME", "key": "seed", "value": 814886366, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 195}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014680, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014680, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014680, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014681, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014680, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014681, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014684, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014684, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014681, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014685, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014685, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014682, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014683, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014685, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014685, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014684, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014684, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014684, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014685, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014687, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014686, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014688, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014690, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014689, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014691, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014692, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014693, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014694, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014695, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014696, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014697, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014698, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014699, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014702, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014701, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621375014702, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:56:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621375014812, "event_type": "POINT_IN_TIME", "key": "seed", "value": 814886366, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 224}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887334, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886790, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886454, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887270, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886870, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887206, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886750, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886990, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886470, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887310, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886374, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886598, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886574, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886446, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886422, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887374, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886406, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886926, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886518, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887118, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886902, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887038, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886654, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886510, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886494, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886854, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887358, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887078, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886766, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887102, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886758, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886686, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887326, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886966, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887350, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886430, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886958, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886726, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886542, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886622, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886502, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887150, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886558, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887158, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886606, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886702, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886414, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886894, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887190, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886742, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886998, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886662, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886638, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886822, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886582, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886782, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886974, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886398, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886670, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887182, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887166, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886982, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887246, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886590, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887126, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886614, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887046, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887214, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887206
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887110, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887230, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886774, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887254, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886566, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887310
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886382, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886646, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886830, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886462, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887134, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886838, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887294, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887198, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887366, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887238, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887262, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887174, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886694, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886478, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887302, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886654
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886390, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886942, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886806, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887022, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886734, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887094, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886878, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886934, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887222, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887030, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886598
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886950, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887142, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887014, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886630, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886462
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886366, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887318, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887270
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887006, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886526, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886870
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886678, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887062, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886798, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886942
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886702
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887286, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886374
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886814, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886870, start_epoch=1, synthetic=False,tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887206, start_epoch=1, synthetic=False,tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887374
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887054, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886958
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886398
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887118
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886542
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887070, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886550, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886502
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886990
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886438, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887086, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887158
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886846, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887278, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886534, start_epoch=1, syntheNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887310, start_epoch=1, synthetic=False,INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886486, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886494
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886854
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887358
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886862, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887078
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886766
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887246
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886710, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886758
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886686
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886430
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886718, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887342, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887382, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886782
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886902
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886670
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886462, start_epoch=1, synthetic=False,tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886910, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886750
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886894
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886470
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886574
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886982
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886662
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886518, start_epoch=1, synthetic=False,INFO:root:Seed: 814886590
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887118, start_epoch=1, synthetic=False,INFO:root:Seed: 814886638
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886918, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887350
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886582
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886518
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887334
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887174
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887270, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886790
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886454
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886886, start_epoch=1, syntheabout to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886558
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814887206
INFO:root:Seed: 814887182
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887110
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886510
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887230
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887038, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886654, start_epoch=1, synthetic=False,INFO:root:Seed: 814887166
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886382
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887102
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887142
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887014
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887134
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886406
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887126
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887366
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886942, start_epoch=1, synthetic=False,INFO:root:Seed: 814886726
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887046
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886494, start_epoch=1, synthetic=False,INFO:root:Seed: 814887214
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886622
about to model_zoo.get_model( resnet34_v1 )
tic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887150
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887302
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886374, start_epoch=1, synthetic=False,INFO:root:Seed: 814887038
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887254
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886390
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886414
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887022
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887094
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886598, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887190
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887286
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886646
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886446, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886950
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886422
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886830
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886822
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886630
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887326
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886366
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886966
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887318
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887198
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887374, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887238
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886614
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886926
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886406, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886694
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886550
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886478
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887006
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886526
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886438
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886678
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886606
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886798
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886774
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887278
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886534
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886486
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886806
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886454, start_epoch=1, synthetic=False,INFO:root:Seed: 814886734
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886566
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886878
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886814
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887222
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886998
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886750, start_epoch=1, synthetic=False,INFO:root:Seed: 814886446
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886990, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886838
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886678, start_epoch=1, synthetic=False,INFO:root:Seed: 814887342
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887382
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886510, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887262
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887070
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886702, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886894, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886910
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886470, start_epoch=1, synthetic=False,INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886854, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887086
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886846
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887062
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887078, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886934
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887030
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886862
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886742
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886662, start_epoch=1, synthetic=False,INFO:root:Seed: 814886710
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886686, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887326, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814887294
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887350, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886718
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814887054
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886974
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886958, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886726, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886398, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887334, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886542, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 814886886
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886670, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886502, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886790, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 814886870
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886558, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887158, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 814886918
Seed: 814887310
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887166, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887358, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887190, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886862, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886766, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886742, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886574, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886982, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887246, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886590, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886758, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886638, start_epoch=1, synthetic=False,INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886822, start_epoch=1, synthetic=False,INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886966, start_epoch=1, synthetic=False,INFO:root:precision: fp16
Seed: 814887374
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886430, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886782, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 814887118
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886902, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 814886990
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887182, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 814886654
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887110, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887230, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886414, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 814886494
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886382, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Seed: 814886598
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886766
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887102, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886758
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886422, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Seed: 814886686
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887134, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886430
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887126, start_epoch=1, synthetic=False,INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886582, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886614, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886926, start_epoch=1, synthetic=False,INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887046, start_epoch=1, synthetic=False,INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886902
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887174, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 814886670
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886622, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 814887270
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 814886750
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887302, start_epoch=1, synthetic=False,INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 216
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886390, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 814886702
precision: fp16
INFO:root:MPI global rank: 416
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 872
Seed: 814886894
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886806, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887022, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
Seed: 814886470
INFO:root:MPI global rank: 608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 814886982
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886950, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn add relu: True
Seed: 814886662
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886590
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 814886638
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887142, start_epoch=1, synthetic=False,INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887014, start_epoch=1, synthetic=False,INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 814887350
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 32
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887318, start_epoch=1, synthetic=False,INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887198, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887366, start_epoch=1, synthetic=False,INFO:root:bn group: 8
Seed: 814886958
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887238, start_epoch=1, synthetic=False,INFO:root:MPI global rank: 248
Seed: 814886398
INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 814886518
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887334
INFO:root:MPI global rank: 560
Seed: 814886542
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887262, start_epoch=1, synthetic=False,INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887214, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 680
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Seed: 814886502
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886790
INFO:root:async validation: True
Seed: 814886454
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887150, start_epoch=1, synthetic=False,INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886478, start_epoch=1, synthetic=False,INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887006, start_epoch=1, synthetic=False,INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814886558
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 814887158
INFO:root:[SSD] fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 814887110
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886606, start_epoch=1, synthetic=False,INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886798, start_epoch=1, synthetic=False,INFO:root:[SSD] bn group: 8
Seed: 814886510
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886774, start_epoch=1, synthetic=False,INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887254, start_epoch=1, synthetic=False,INFO:root:[SSD] bn group: 8
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 152
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887094, start_epoch=1, synthetic=False,INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI global rank: 752
Seed: 814887166
INFO:root:MPI size: 1024
Seed: 814887358
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887286, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 814886374
INFO:root:MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886646, start_epoch=1, synthetic=False,INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887030, start_epoch=1, synthetic=False,INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Seed: 814887078
INFO:root:MPI global rank: 968
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 814887246
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886998, start_epoch=1, synthetic=False,INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886830, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886630, start_epoch=1, synthetic=False,INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 814887134
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886366, start_epoch=1, synthetic=False,INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886838, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887294, start_epoch=1, synthetic=False,INFO:root:MPI size: 1024
Seed: 814886406
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887054, start_epoch=1, synthetic=False,INFO:root:MPI global rank: 896
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 814886726
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 814887046
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887070, start_epoch=1, synthetic=False,INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 704
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886694, start_epoch=1, synthetic=False,INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886550, start_epoch=1, synthetic=False,INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886526, start_epoch=1, synthetic=False,INFO:root:MPI global rank: 848
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 536
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886438, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887086, start_epoch=1, synthetic=False,INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887302
INFO:root:async validation: True
Seed: 814887038
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886846, start_epoch=1, synthetic=False,INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887062, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887278, start_epoch=1, synthetic=False,INFO:root:[SSD] bn group: 8
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 814886390
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886534, start_epoch=1, synthetic=False,INFO:root:MPI size: 1024
Seed: 814886942
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886486, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn add relu: True
Seed: 814886414
INFO:root:MPI global rank: 808
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 814887022
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 814886854
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886734, start_epoch=1, synthetic=False,INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886566, start_epoch=1, synthetic=False,INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 814887190
INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886878, start_epoch=1, synthetic=False,INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886934, start_epoch=1, synthetic=False,INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886814, start_epoch=1, synthetic=False,INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886646
precision: fp16
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887222, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 814886574
INFO:root:MPI global rank: 328
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 304
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 814886950
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI global rank: 184
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 814886422
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 814886822
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 814887326
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 814886966
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887318
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886718, start_epoch=1, synthetic=False,INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887342, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814887382, start_epoch=1, synthetic=False,INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 256
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886782
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886974, start_epoch=1, synthetic=False,INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 814886614
INFO:root:fuse bn add relu: True
Seed: 814886926
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887174
precision: fp16
INFO:root:bn group: 8
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 814887006
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886910, start_epoch=1, synthetic=False,INFO:root:MPI global rank: 136
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886526
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 814887182
INFO:root:loss scaling: 128.0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 814886678
precision: fp16
INFO:root:MPI global rank: 424
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 814886798
INFO:root:MPI global rank: 88
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 814887230
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814886774
INFO:root:MPI local rank: 0
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
Seed: 814886806
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 814886566
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886382
INFO:root:MPI global rank: 520
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 814887102
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886710, start_epoch=1, synthetic=False,INFO:root:bn all reduce fp16: False
Seed: 814886998
INFO:root:fuse bn add relu: True
Seed: 814886446
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:MPI size: 1024
Seed: 814887142
INFO:root:bn group: 8
Seed: 814887014
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814886462
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886918, start_epoch=1, synthetic=False,INFO:root:MPI global rank: 784
precision: fp16
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 814886838
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 814887366
INFO:root:bn all reduce fp16: False
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 904
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 112
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:async validation: True
Seed: 814887262
INFO:root:MPI local rank: 0
Seed: 814887070
INFO:root:bn all reduce fp16: False
Seed: 814887214
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=814886886, start_epoch=1, synthetic=False,INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887150
INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 640
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
Seed: 814887086
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886846
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
Seed: 814887062
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887254
INFO:root:bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814887094
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
Seed: 814887286
INFO:root:bn group: 8
precision: fp16
INFO:root:MPI global rank: 544
Seed: 814886934
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 814887030
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 160
INFO:root:MPI local rank: 0
Seed: 814886862
precision: fp16
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:async validation: True
Seed: 814886742
INFO:root:MPI global rank: 504
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI global rank: 840
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 814886830
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 814886630
INFO:root:async validation: True
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886366
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
Seed: 814887294
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887126
INFO:root:fuse bn relu: True
Seed: 814886718
INFO:root:fuse bn relu: True
Seed: 814887054
INFO:root:[SSD] fuse bn relu: True
Seed: 814887198
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 814886582
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886974
INFO:root:bn group: 8
Seed: 814887238
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 814886694
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 814886550
INFO:root:fuse bn relu: True
Seed: 814886622
INFO:root:MPI global rank: 384
precision: fp16
INFO:root:MPI size: 1024
 target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 814886478
INFO:root:MPI global rank: 624
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
precision: fp16
INFO:root:async validation: True
Seed: 814886438
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 814886606
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 814887278
INFO:root:[SSD] network: resnet34_v1
Seed: 814886534
INFO:root:MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814886486
INFO:root:MPI global rank: 816
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 814886734
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 814886878
INFO:root:[SSD] network: resnet34_v1
Seed: 814886814
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814887222
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI global rank: 720
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 814886918
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI global rank: 72
Seed: 814887342
INFO:root:fuse bn add relu: True
Seed: 814887382
INFO:root:async validation: True
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 792
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 814886910
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 936
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI global rank: 288
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 814886710
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:MPI global rank: 672
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
precision: fp16
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 480
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:MPI global rank: 312
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
Seed: 814886886
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI global rank: 744
fuse bn add relu: True
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 696
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 240
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 432
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI global rank: 864
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 408
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:MPI global rank: 912
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 888
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI global rank: 24
fuse bn relu: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 576
fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 168
fuse bn relu: True
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 216
INFO:root:MPI global rank: 336
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI local rank: 0
MPI global rank: 416
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 872
INFO:root:MPI global rank: 120
async validation: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI global rank: 608
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 528
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 32
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 440
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:MPI size: 1024
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:[SSD] bn group: 8
MPI global rank: 248
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 656
MPI size: 1024
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI global rank: 560
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:fuse bn relu: True
async validation: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 680
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 104
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 128
INFO:root:MPI local rank: 0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 488
fuse bn add relu: True
INFO:root:MPI size: 1024
bn group: 8
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI global rank: 152
MPI local rank: 0
INFO:root:MPI global rank: 368
MPI size: 1024
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
MPI global rank: 752
INFO:root:bn group: 8
MPI size: 1024
INFO:root:MPI local rank: 0
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI global rank: 176
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI global rank: 728
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 200
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 968
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 944
bn all reduce fp16: False
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:async validation: True
MPI global rank: 896
INFO:root:MPI global rank: 800
fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI global rank: 992
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI global rank: 704
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 824
MPI local rank: 0
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 536
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 848
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn add relu: True
bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 920
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 808
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 512
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI global rank: 568
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI global rank: 328
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 304
INFO:root:async validation: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 184
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn group: 8
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 448
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:loss scaling: 128.0
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 16
MPI global rank: 256
INFO:root:MPI global rank: 280
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 856
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 136
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:bn group: 8
async validation: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
MPI global rank: 88
INFO:root:bn group: 8
MPI global rank: 424
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:MPI global rank: 496
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI global rank: 664
async validation: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 232
bn group: 8
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 520
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 712
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 784
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 400
[SSD] bn group: 8
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI global rank: 904
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 112
INFO:root:MPI global rank: 376
bn group: 8
INFO:root:MPI global rank: 208
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 640
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI global rank: 736
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
async validation: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:loss scaling: 128.0
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:MPI global rank: 616
[SSD] bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI global rank: 544
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
MPI global rank: 160
INFO:root:MPI global rank: 880
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
MPI local rank: 0
async validation: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:async validation: True
MPI global rank: 504
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 344
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI global rank: 840
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI global rank: 632
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:MPI size: 1024
bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 584
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:MPI global rank: 296
bn all reduce fp16: False
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 384
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI global rank: 80
fuse bn add relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 624
INFO:root:async validation: True
bn group: 8
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI size: 1024
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 192
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 224
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 816
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 392
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:MPI global rank: 56
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:MPI local rank: 0
fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 720
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:MPI global rank: 272
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI global rank: 72
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 792
INFO:root:MPI global rank: 320
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 936
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 776
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 288
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI global rank: 648
MPI size: 1024
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI global rank: 672
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 456
bn group: 8
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 480
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI global rank: 264
MPI global rank: 312
INFO:root:MPI global rank: 96
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:async validation: True
async validation: True
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 552
loss scaling: 128.0
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI global rank: 744
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
MPI local rank: 0
async validation: True
INFO:root:fuse bn relu: True
MPI global rank: 696
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI global rank: 768
fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 960
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 240
INFO:root:MPI global rank: 0
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 432
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 600
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 144
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:MPI global rank: 984
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI global rank: 864
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 1008
async validation: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI global rank: 64
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 408
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn group: 8
MPI global rank: 912
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI global rank: 472
[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 928
MPI size: 1024
INFO:root:MPI global rank: 952
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 40
MPI global rank: 888
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
MPI global rank: 24
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:loss scaling: 128.0
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
MPI global rank: 576
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI global rank: 168
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
bn group: 8
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:MPI global rank: 760
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:async validation: True
bn group: 8
INFO:root:MPI global rank: 832
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 688
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 352
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI global rank: 336
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI size: 1024
INFO:root:async validation: True
MPI local rank: 0
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 120
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI global rank: 48
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 1000
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI global rank: 528
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
async validation: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI local rank: 0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 976
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI global rank: 1016
fuse bn relu: True
INFO:root:MPI global rank: 592
loss scaling: 128.0
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 440
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 656
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:MPI global rank: 360
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI size: 1024
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI global rank: 104
bn all reduce fp16: False
MPI size: 1024
MPI global rank: 128
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
async validation: True
[SSD] bn group: 8
async validation: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
bn group: 8
[SSD] fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] bn group: 8
MPI global rank: 488
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
fuse bn add relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 368
fuse bn relu: True
async validation: True
bn group: 8
MPI local rank: 0
[SSD] network: resnet34_v1
bn all reduce fp16: False
fuse bn add relu: True
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
bn group: 8
fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 728
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI global rank: 200
[SSD] fuse bn relu: True
async validation: True
MPI local rank: 0
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
async validation: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 944
bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI size: 1024
MPI global rank: 800
bn group: 8
fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn all reduce fp16: False
bn group: 8
[SSD] network: resnet34_v1
async validation: True
MPI size: 1024
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
async validation: True
MPI global rank: 824
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
fuse bn add relu: True
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
bn group: 8
[SSD] bn group: 8
fuse bn relu: True
MPI size: 1024
bn all reduce fp16: False
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
MPI global rank: 920
MPI size: 1024
bn group: 8
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
MPI global rank: 512
fuse bn relu: True
async validation: True
MPI local rank: 0
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
async validation: True
MPI global rank: 8
[SSD] network: resnet34_v1
bn group: 8
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
bn all reduce fp16: False
async validation: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 568
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
fuse bn add relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
fuse bn add relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
bn group: 8
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn all reduce fp16: False
bn all reduce fp16: False
MPI global rank: 448
MPI size: 1024
MPI size: 1024
MPI global rank: 280
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
MPI local rank: 0
MPI global rank: 16
MPI local rank: 0
async validation: True
MPI local rank: 0
fuse bn add relu: True
[SSD] network: resnet34_v1
async validation: True
async validation: True
bn group: 8
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI size: 1024
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 856
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
fuse bn relu: True
bn group: 8
[SSD] fuse bn relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
bn group: 8
[SSD] bn group: 8
bn all reduce fp16: False
MPI size: 1024
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI size: 1024
fuse bn relu: True
MPI global rank: 664
async validation: True
fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 232
bn group: 8
async validation: True
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
async validation: True
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
MPI global rank: 712
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn add relu: True
loss scaling: 128.0
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
fuse bn add relu: True
[SSD] bn group: 8
MPI global rank: 400
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
MPI local rank: 0
bn all reduce fp16: False
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
MPI size: 1024
MPI size: 1024
fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 376
MPI global rank: 208
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
bn group: 8
bn all reduce fp16: False
async validation: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 736
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] fuse bn relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] fuse bn relu: True
fuse bn add relu: True
bn all reduce fp16: False
loss scaling: 128.0
[SSD] fuse bn add relu: True
bn group: 8
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] bn group: 8
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 616
MPI size: 1024
fuse bn add relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 880
bn group: 8
async validation: True
fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI global rank: 344
bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI size: 1024
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 632
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] fuse bn relu: True
async validation: True
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] fuse bn relu: True
bn group: 8
fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn add relu: True
MPI size: 1024
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 584
MPI size: 1024
MPI global rank: 296
bn all reduce fp16: False
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
fuse bn add relu: True
async validation: True
MPI local rank: 0
MPI global rank: 80
bn group: 8
[SSD] network: resnet34_v1
async validation: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI global rank: 224
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn relu: True
[SSD] network: resnet34_v1
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 392
fuse bn add relu: True
fuse bn relu: True
[SSD] fuse bn relu: True
bn group: 8
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
async validation: True
bn group: 8
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI global rank: 56
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn relu: True
MPI global rank: 272
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] fuse bn add relu: True
MPI local rank: 0
bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 320
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] bn group: 8
async validation: True
bn all reduce fp16: False
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI size: 1024
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] fuse bn relu: True
MPI local rank: 0
MPI size: 1024
fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
fuse bn add relu: True
MPI global rank: 776
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 648
fuse bn relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI global rank: 456
bn group: 8
bn group: 8
[SSD] fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
bn all reduce fp16: False
[SSD] bn group: 8
async validation: True
MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 96
[SSD] network: resnet34_v1
MPI global rank: 264
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
MPI global rank: 552
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
MPI local rank: 0
bn group: 8
loss scaling: 128.0
fuse bn add relu: True
async validation: True
bn all reduce fp16: False
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn relu: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 768
fuse bn add relu: True
MPI size: 1024
MPI global rank: 960
[SSD] fuse bn relu: True
MPI local rank: 0
bn group: 8
MPI local rank: 0
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
async validation: True
[SSD] bn group: 8
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI global rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
async validation: True
fuse bn relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] fuse bn add relu: True
fuse bn add relu: True
MPI size: 1024
MPI global rank: 600
[SSD] bn group: 8
bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
MPI local rank: 0
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn all reduce fp16: False
[SSD] network: resnet34_v1
MPI size: 1024
MPI global rank: 984
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 1008
MPI local rank: 0
MPI size: 1024
MPI global rank: 64
[SSD] fuse bn relu: True
MPI local rank: 0
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] fuse bn add relu: True
async validation: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
fuse bn add relu: True
[SSD] bn group: 8
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
fuse bn relu: True
MPI size: 1024
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
MPI global rank: 472
bn group: 8
fuse bn relu: True
bn group: 8
MPI local rank: 0
bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
MPI size: 1024
bn all reduce fp16: False
async validation: True
MPI size: 1024
MPI global rank: 952
MPI size: 1024
[SSD] network: resnet34_v1
MPI global rank: 928
MPI global rank: 40
MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
async validation: True
async validation: True
[SSD] fuse bn relu: True
async validation: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
loss scaling: 128.0
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
bn group: 8
fuse bn relu: True
fuse bn relu: True
bn all reduce fp16: False
MPI size: 1024
fuse bn add relu: True
fuse bn add relu: True
fuse bn add relu: True
MPI global rank: 760
bn group: 8
bn group: 8
bn group: 8
bn all reduce fp16: False
bn all reduce fp16: False
bn all reduce fp16: False
MPI local rank: 0
MPI size: 1024
MPI size: 1024
MPI size: 1024
async validation: True
MPI global rank: 352
MPI global rank: 832
MPI global rank: 688
[SSD] network: resnet34_v1
MPI local rank: 0
MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
async validation: True
async validation: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
MPI size: 1024
fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
MPI global rank: 1000
fuse bn add relu: True
fuse bn add relu: True
bn group: 8
MPI local rank: 0
bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
async validation: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn all reduce fp16: False
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
MPI global rank: 976
[SSD] network: resnet34_v1
MPI global rank: 1016
MPI global rank: 592
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
async validation: True
MPI local rank: 0
[SSD] fuse bn relu: True
async validation: True
async validation: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
bn all reduce fp16: False
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 360
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
async validation: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:01] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621375022704, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 373}}
:::MLLOG {"namespace": "", "time_ms": 1621375022704, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 374}}
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621375022705, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621375022705, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621375022705, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621375022705, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [68, 85], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 35}}
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621375022717, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 417}}
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:57:02] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
INFO:root:COCO reader: TFRecord
Running training dry runs ...
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
:::MLLOG {"namespace": "", "time_ms": 1621375024666, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
INFO:root:Running training dry runs ...
COCO reader: TFRecord
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
[luna-0021:0:3356101 - context.c:581] INFO job (ID: 17873238002307806549) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356101 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x0 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356101 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x3f caps:0x16
[luna-0021:0:3356101 - comm.c:385] INFO [group#:0] group id:2 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x760a00000002) mlid:c006
[luna-0021:0:3356101 - comm.c:385] INFO [group#:1] group id:2 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356109 - context.c:581] INFO job (ID: 17873237833869513562) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356109 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356109 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x40 caps:0x16
[luna-0021:0:3356109 - comm.c:385] INFO [group#:0] group id:3 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x770a00000003) mlid:c007
[luna-0021:0:3356109 - comm.c:385] INFO [group#:1] group id:3 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356100 - context.c:581] INFO job (ID: 17873238241642376027) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356100 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x2 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356100 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x41 caps:0x16
[luna-0021:0:3356100 - comm.c:385] INFO [group#:0] group id:4 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x780a00000004) mlid:c008
[luna-0021:0:3356100 - comm.c:385] INFO [group#:1] group id:4 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356112 - context.c:581] INFO job (ID: 17873238325915612625) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356112 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x4 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356112 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x43 caps:0x16
[luna-0021:0:3356112 - comm.c:385] INFO [group#:0] group id:5 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x7a0a00000005) mlid:c00a
[luna-0021:0:3356112 - comm.c:385] INFO [group#:1] group id:5 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356104 - context.c:581] INFO job (ID: 17873237795521292371) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356104 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x6 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356104 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x45 caps:0x16
[luna-0021:0:3356104 - comm.c:385] INFO [group#:0] group id:6 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x7c0a00000006) mlid:c00c
[luna-0021:0:3356104 - comm.c:385] INFO [group#:1] group id:6 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356102 - context.c:581] INFO job (ID: 17873238580772206870) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356102 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xf caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356102 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4e caps:0x16
[luna-0021:0:3356102 - comm.c:385] INFO [group#:0] group id:7 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x7e0a00000007) mlid:c016
[luna-0021:0:3356102 - comm.c:385] INFO [group#:1] group id:7 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356096 - context.c:581] INFO job (ID: 17873237877624619902) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356096 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x12 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356096 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x51 caps:0x16
[luna-0021:0:3356096 - comm.c:385] INFO [group#:0] group id:8 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x800a00000008) mlid:c018
[luna-0021:0:3356096 - comm.c:385] INFO [group#:1] group id:8 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562078244281) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x14 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x53 caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563452788883) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x19 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x58 caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562651292564) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1b caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5a caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563397231405) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1d caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5c caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562097061471) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1f caps:0x6 quota: ( osts:28 user_data_per_ost:1024 max_groups:28 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5e caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562521410880) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x18 caps:0x6 quota: ( osts:7 user_data_per_ost:96 max_groups:7 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x57 caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562249822464) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x21 caps:0x6 quota: ( osts:3 user_data_per_ost:96 max_groups:3 max_qps:1 max_group_channels:1)
[luna-0021:0:3356111 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x60 caps:0x16
[luna-0021:0:3356111 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1300559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2982496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3022501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1753831 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:262844 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1054401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2482057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1127883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:93543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1249330 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1069444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1854035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3492528 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1329245 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3582904 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:312419 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3791393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3047742 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:34147 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1057689 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2057286 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2473374 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:48577 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1485762 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1444544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1182458 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2901065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2718578 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2591974 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2445979 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3718883 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4185508 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2525786 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2239037 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3729624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1887266 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2025328 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2967278 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:449190 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:63493 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1004110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:260457 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:586014 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:919582 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1468199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4083320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3149343 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1926044 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4138886 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3474657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1449688 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:488139 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1157714 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:990823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1156630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2137710 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:310464 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3226145 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3267462 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1948588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3564259 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3082292 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1250201 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1304813 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:477369 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:458436 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2385559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:65930 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3146257 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3629996 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2573117 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2358202 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2009430 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1269347 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1692040 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2096564 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1060560 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1084629 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:886289 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:558209 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3622305 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4143692 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4183496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1863963 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2384373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:89290 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:325716 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2664544 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1171393 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:628770 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:578431 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3323641 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2163657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:828512 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1163361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1218428 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3810505 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3080260 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1356074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1124189 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:65849 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1170308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3379884 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1654994 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2607861 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:126242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:820926 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1308949 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2320074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1253746 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1057962 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1468980 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2013126 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1217513 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1552471 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2087552 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1545581 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:580666 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1380363 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1718179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1071022 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3477823 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2666057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:897961 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1399281 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:140072 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:770543 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238561940118285) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563055190259) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562967938795) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562983974952) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562182062272) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238561937152226) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562823866533) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563054384125) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563510546219) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562185965252) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563318867882) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562750194989) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562876063626) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562700018272) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238563501419046) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562062017155) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3356111 - context.c:581] INFO job (ID: 17873238562130364937) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3356111 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3356111 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3356111 - context.c:621] ERROR SHArP Job init error: No resource
[2021-05-18 15:03:28.711858: W /tmp/pip-req-build-a0o11jgy/horovod/common/stall_inspector.cc:105] One or more tensors were submitted to be reduced, gathered or broadcasted by subset of ranks and are waiting for remainder of ranks for more than 60 seconds. This may indicate that different ranks are trying to submit different tensors or that only subset of ranks is submitting tensors, which will cause deadlock.
Missing ranks:
656: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
657: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
658: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
659: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
660: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
661: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
662: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
663: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Running inference dry runs ...
Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621375413392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv9_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv10_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv11_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv12_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375413403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_bias"}}
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1621375414160, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 522}}
:::MLLOG {"namespace": "", "time_ms": 1621375414161, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 526}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621375415258, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 24, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 110}}
:::MLLOG {"namespace": "", "time_ms": 1621375415258, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3072, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 111}}
:::MLLOG {"namespace": "", "time_ms": 1621375415258, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 3, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 112}}
:::MLLOG {"namespace": "", "time_ms": 1621375415259, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 115}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621375415259, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 0.497 [sec],avg speed: 234775.993 [imgs/sec],loss=19.708
[Training][Epoch 1] training time: 0.497 [sec],avg speed: 234775.993 [imgs/sec],loss=19.708
:::MLLOG {"namespace": "", "time_ms": 1621375415756, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 234775.99263487387, "lr": 0.009556886227544914, "loss": 19.708148353978206}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621375415756, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 234775.99263487387, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375415756, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621375415756, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Epoch 2] training time: 0.317 [sec],avg speed: 368597.614 [imgs/sec],loss=11.816
[Training][Epoch 2] training time: 0.317 [sec],avg speed: 368597.614 [imgs/sec],loss=11.816
:::MLLOG {"namespace": "", "time_ms": 1621375416073, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368597.6138379296, "lr": 0.019365269461077805, "loss": 11.8158944280524}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621375416073, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368597.6138379296, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375416074, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621375416074, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.196 [ms], speed: 374806.251 [imgs/sec], loss=9.396
[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.196 [ms], speed: 374806.251 [imgs/sec], loss=9.396
:::MLLOG {"namespace": "", "time_ms": 1621375416254, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374806.2508326667, "loss": 9.395782470703125}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [3, 100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375416254, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374806.2508326667, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 3] training time: 0.334 [sec],avg speed: 349628.412 [imgs/sec],loss=9.551
[Training][Epoch 3] training time: 0.334 [sec],avg speed: 349628.412 [imgs/sec],loss=9.551
:::MLLOG {"namespace": "", "time_ms": 1621375416408, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349628.4124565576, "lr": 0.029173652694610752, "loss": 9.551479465083071}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621375416408, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349628.4124565576, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375416408, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621375416408, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Epoch 4] training time: 0.322 [sec],avg speed: 363092.791 [imgs/sec],loss=8.780
[Training][Epoch 4] training time: 0.322 [sec],avg speed: 363092.791 [imgs/sec],loss=8.780
:::MLLOG {"namespace": "", "time_ms": 1621375416730, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363092.7911438589, "lr": 0.0389820359281437, "loss": 8.780494551909598}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621375416730, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363092.7911438589, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375416730, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621375416730, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 0.314 [sec],avg speed: 372279.352 [imgs/sec],loss=8.610
[Training][Epoch 5] training time: 0.314 [sec],avg speed: 372279.352 [imgs/sec],loss=8.610
:::MLLOG {"namespace": "", "time_ms": 1621375417044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372279.3524876598, "lr": 0.048790419161676646, "loss": 8.610202601081447}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375417044, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372279.3524876598, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375417044, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375417055, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 5}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 190.715 [ms], allgather: 52.280 [ms], asnumpy: 6.856 [ms], speed: 20011.871 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 190.715 [ms], allgather: 52.280 [ms], asnumpy: 6.856 [ms], speed: 20011.871 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375417306, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 9.295 [ms], speed: 330493.959 [imgs/sec], loss=8.085
[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 9.295 [ms], speed: 330493.959 [imgs/sec], loss=8.085
:::MLLOG {"namespace": "", "time_ms": 1621375417353, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 330493.9591861861, "loss": 8.085122108459473}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [6, 200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375417353, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 330493.9591861861, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 6] training time: 0.321 [sec],avg speed: 363230.704 [imgs/sec],loss=7.974
[Training][Epoch 6] training time: 0.321 [sec],avg speed: 363230.704 [imgs/sec],loss=7.974
:::MLLOG {"namespace": "", "time_ms": 1621375417628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363230.70421431836, "lr": 0.05859880239520959, "loss": 7.97406678450735}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621375417628, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363230.70421431836, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375417628, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621375417628, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.312 [sec],avg speed: 373906.079 [imgs/sec],loss=8.081
[Training][Epoch 7] training time: 0.312 [sec],avg speed: 373906.079 [imgs/sec],loss=8.081
:::MLLOG {"namespace": "", "time_ms": 1621375417940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373906.0792705557, "lr": 0.06840718562874248, "loss": 8.081318052191483}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621375417941, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373906.0792705557, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375417941, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621375417941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.471 [ms], speed: 362645.873 [imgs/sec], loss=6.319
[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.471 [ms], speed: 362645.873 [imgs/sec], loss=6.319
:::MLLOG {"namespace": "", "time_ms": 1621375418170, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362645.873028415, "loss": 6.318960666656494}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [8, 300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375418170, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362645.873028415, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 8] training time: 0.326 [sec],avg speed: 358018.625 [imgs/sec],loss=7.413
[Training][Epoch 8] training time: 0.326 [sec],avg speed: 358018.625 [imgs/sec],loss=7.413
:::MLLOG {"namespace": "", "time_ms": 1621375418267, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358018.62514185434, "lr": 0.07821556886227543, "loss": 7.412729238208971}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621375418267, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358018.62514185434, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375418267, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621375418267, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Epoch 9] training time: 0.313 [sec],avg speed: 373161.460 [imgs/sec],loss=7.433
[Training][Epoch 9] training time: 0.313 [sec],avg speed: 373161.460 [imgs/sec],loss=7.433
:::MLLOG {"namespace": "", "time_ms": 1621375418580, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373161.4604524188, "lr": 0.08802395209580838, "loss": 7.433269375248959}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621375418580, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373161.4604524188, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375418581, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621375418581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 0.355 [sec],avg speed: 329001.492 [imgs/sec],loss=6.893
[Training][Epoch 10] training time: 0.355 [sec],avg speed: 329001.492 [imgs/sec],loss=6.893
:::MLLOG {"namespace": "", "time_ms": 1621375418936, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 329001.49221586337, "lr": 0.0978323353293413, "loss": 6.893155901055587}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375418936, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 329001.49221586337, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375418936, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375418946, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375418984, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375418984, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.002320599413029596, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 5}}
loading annotations into memory...
Done (t=0.10s)
creating index...
Loading and preparing results...
DONE (t=0.33s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.86s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00232
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.00679
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00124
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00411
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.00298
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.00546
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 54.112 [ms], allgather: 41.380 [ms], asnumpy: 3.055 [ms], speed: 50736.976 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 54.112 [ms], allgather: 41.380 [ms], asnumpy: 3.055 [ms], speed: 50736.976 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375419083, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 14.146 [ms], speed: 217157.730 [imgs/sec], loss=5.311
[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 14.146 [ms], speed: 217157.730 [imgs/sec], loss=5.311
:::MLLOG {"namespace": "", "time_ms": 1621375419224, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 217157.7298122671, "loss": 5.311336517333984}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [11, 400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375419224, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 217157.7298122671, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 11] training time: 0.371 [sec],avg speed: 314793.452 [imgs/sec],loss=6.714
[Training][Epoch 11] training time: 0.371 [sec],avg speed: 314793.452 [imgs/sec],loss=6.714
:::MLLOG {"namespace": "", "time_ms": 1621375419454, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 314793.4515057005, "lr": 0.10764071856287424, "loss": 6.713609921304803}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621375419454, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 314793.4515057005, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375419454, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621375419454, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 0.331 [sec],avg speed: 352462.622 [imgs/sec],loss=6.597
[Training][Epoch 12] training time: 0.331 [sec],avg speed: 352462.622 [imgs/sec],loss=6.597
:::MLLOG {"namespace": "", "time_ms": 1621375419785, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352462.6224979448, "lr": 0.11744910179640719, "loss": 6.597307004426655}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621375419786, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352462.6224979448, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375419786, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621375419786, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.754 [ms], speed: 350932.158 [imgs/sec], loss=7.496
[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.754 [ms], speed: 350932.158 [imgs/sec], loss=7.496
:::MLLOG {"namespace": "", "time_ms": 1621375420066, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350932.15823048225, "loss": 7.495780944824219}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [13, 500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375420066, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350932.15823048225, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 13] training time: 0.329 [sec],avg speed: 354794.705 [imgs/sec],loss=6.606
[Training][Epoch 13] training time: 0.329 [sec],avg speed: 354794.705 [imgs/sec],loss=6.606
:::MLLOG {"namespace": "", "time_ms": 1621375420115, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354794.70455578045, "lr": 0.1272574850299401, "loss": 6.605801745464928}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621375420115, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354794.70455578045, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375420115, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621375420115, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.327 [sec],avg speed: 356641.191 [imgs/sec],loss=6.040
[Training][Epoch 14] training time: 0.327 [sec],avg speed: 356641.191 [imgs/sec],loss=6.040
:::MLLOG {"namespace": "", "time_ms": 1621375420443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356641.1911176634, "lr": 0.13706586826347306, "loss": 6.040288661655627}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621375420443, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356641.1911176634, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375420443, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621375420443, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 15, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375420532, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375420533, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.016295512681874298, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 10}}
INFO:root:[Training][Epoch 15] training time: 0.327 [sec],avg speed: 357147.432 [imgs/sec],loss=6.207
[Training][Epoch 15] training time: 0.327 [sec],avg speed: 357147.432 [imgs/sec],loss=6.207
:::MLLOG {"namespace": "", "time_ms": 1621375420770, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357147.4319326358, "lr": 0.14687425149700598, "loss": 6.206746634684111}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375420770, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357147.4319326358, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375420770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375420781, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 15}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 52.038 [ms], allgather: 30.454 [ms], asnumpy: 5.312 [ms], speed: 56943.880 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 52.038 [ms], allgather: 30.454 [ms], asnumpy: 5.312 [ms], speed: 56943.880 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375420869, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 15.512 [ms], speed: 198045.027 [imgs/sec], loss=4.274
[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 15.512 [ms], speed: 198045.027 [imgs/sec], loss=4.274
:::MLLOG {"namespace": "", "time_ms": 1621375421102, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 198045.02715935023, "loss": 4.274196147918701}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [16, 600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375421102, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 198045.02715935023, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 16] training time: 0.434 [sec],avg speed: 268682.632 [imgs/sec],loss=5.610
[Training][Epoch 16] training time: 0.434 [sec],avg speed: 268682.632 [imgs/sec],loss=5.610
:::MLLOG {"namespace": "", "time_ms": 1621375421304, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 268682.63223733235, "lr": 0.15668263473053892, "loss": 5.609831590401499}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621375421304, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 268682.63223733235, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375421304, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621375421304, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.327 [sec],avg speed: 356700.430 [imgs/sec],loss=5.906
[Training][Epoch 17] training time: 0.327 [sec],avg speed: 356700.430 [imgs/sec],loss=5.906
:::MLLOG {"namespace": "", "time_ms": 1621375421632, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356700.4297834706, "lr": 0.16649101796407187, "loss": 5.90577074728514}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621375421632, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356700.4297834706, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375421632, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621375421632, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 18, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375421814, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375421815, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.045552904047815285, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 15}}
INFO:root:[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.645 [ms], speed: 355331.122 [imgs/sec], loss=5.877
[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.645 [ms], speed: 355331.122 [imgs/sec], loss=5.877
:::MLLOG {"namespace": "", "time_ms": 1621375421952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355331.12157426274, "loss": 5.8771281242370605}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [18, 700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375421952, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355331.12157426274, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 18] training time: 0.329 [sec],avg speed: 354813.730 [imgs/sec],loss=5.993
[Training][Epoch 18] training time: 0.329 [sec],avg speed: 354813.730 [imgs/sec],loss=5.993
:::MLLOG {"namespace": "", "time_ms": 1621375421961, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354813.7304270508, "lr": 0.1762994011976048, "loss": 5.992833313189055}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621375421961, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354813.7304270508, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375421961, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621375421962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Epoch 19] training time: 0.330 [sec],avg speed: 353419.979 [imgs/sec],loss=5.424
[Training][Epoch 19] training time: 0.330 [sec],avg speed: 353419.979 [imgs/sec],loss=5.424
:::MLLOG {"namespace": "", "time_ms": 1621375422292, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353419.97895473853, "lr": 0.18610778443113773, "loss": 5.4242960089131405}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621375422292, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353419.97895473853, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375422292, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621375422292, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.310 [sec],avg speed: 377103.782 [imgs/sec],loss=5.279
[Training][Epoch 20] training time: 0.310 [sec],avg speed: 377103.782 [imgs/sec],loss=5.279
:::MLLOG {"namespace": "", "time_ms": 1621375422602, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377103.78249919513, "lr": 0.19591616766467065, "loss": 5.279008526551096}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375422603, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377103.78249919513, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375422603, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375422613, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 20}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 51.051 [ms], allgather: 27.634 [ms], asnumpy: 4.043 [ms], speed: 60437.702 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 51.051 [ms], allgather: 27.634 [ms], asnumpy: 4.043 [ms], speed: 60437.702 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375422696, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.254 [ms], speed: 372178.725 [imgs/sec], loss=7.274
[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.254 [ms], speed: 372178.725 [imgs/sec], loss=7.274
:::MLLOG {"namespace": "", "time_ms": 1621375422862, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372178.7247907291, "loss": 7.27371072769165}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [21, 800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375422862, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372178.7247907291, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 21] training time: 0.315 [sec],avg speed: 370880.948 [imgs/sec],loss=5.117
[Training][Epoch 21] training time: 0.315 [sec],avg speed: 370880.948 [imgs/sec],loss=5.117
:::MLLOG {"namespace": "", "time_ms": 1621375423011, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370880.94780448894, "lr": 0.2057245508982036, "loss": 5.117160125782616}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621375423011, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370880.94780448894, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375423011, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621375423012, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.325 [sec],avg speed: 359557.181 [imgs/sec],loss=5.318
[Training][Epoch 22] training time: 0.325 [sec],avg speed: 359557.181 [imgs/sec],loss=5.318
:::MLLOG {"namespace": "", "time_ms": 1621375423336, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359557.1807294742, "lr": 0.21553293413173652, "loss": 5.317957740080984}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621375423337, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359557.1807294742, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375423337, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621375423337, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 23, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375423533, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375423533, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.08060227245172451, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 20}}
INFO:root:[Training][Epoch 23] training time: 0.320 [sec],avg speed: 364775.344 [imgs/sec],loss=5.024
[Training][Epoch 23] training time: 0.320 [sec],avg speed: 364775.344 [imgs/sec],loss=5.024
:::MLLOG {"namespace": "", "time_ms": 1621375423657, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364775.3442263393, "lr": 0.22534131736526947, "loss": 5.023872839777093}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621375423657, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364775.3442263393, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375423657, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621375423657, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 8.433 [ms], speed: 364292.432 [imgs/sec], loss=5.253
[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 8.433 [ms], speed: 364292.432 [imgs/sec], loss=5.253
:::MLLOG {"namespace": "", "time_ms": 1621375423683, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364292.43197089783, "loss": 5.253292560577393}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [24, 900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375423683, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364292.43197089783, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 24] training time: 0.313 [sec],avg speed: 373195.592 [imgs/sec],loss=5.147
[Training][Epoch 24] training time: 0.313 [sec],avg speed: 373195.592 [imgs/sec],loss=5.147
:::MLLOG {"namespace": "", "time_ms": 1621375423970, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373195.5915160486, "lr": 0.2351497005988024, "loss": 5.147095253593044}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621375423970, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373195.5915160486, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375423971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621375423971, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Epoch 25] training time: 0.357 [sec],avg speed: 327315.450 [imgs/sec],loss=4.859
[Training][Epoch 25] training time: 0.357 [sec],avg speed: 327315.450 [imgs/sec],loss=4.859
:::MLLOG {"namespace": "", "time_ms": 1621375424327, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327315.4498801713, "lr": 0.24495808383233533, "loss": 4.859448941130387}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375424328, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327315.4498801713, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375424328, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375424338, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 25}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.866 [ms], allgather: 48.353 [ms], asnumpy: 6.838 [ms], speed: 52052.202 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.866 [ms], allgather: 48.353 [ms], asnumpy: 6.838 [ms], speed: 52052.202 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375424435, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.385 [ms], speed: 366360.588 [imgs/sec], loss=6.355
[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.385 [ms], speed: 366360.588 [imgs/sec], loss=6.355
:::MLLOG {"namespace": "", "time_ms": 1621375424644, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 366360.58822860394, "loss": 6.3551506996154785}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [26, 1000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375424644, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 366360.58822860394, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 26] training time: 0.347 [sec],avg speed: 336192.652 [imgs/sec],loss=5.211
[Training][Epoch 26] training time: 0.347 [sec],avg speed: 336192.652 [imgs/sec],loss=5.211
:::MLLOG {"namespace": "", "time_ms": 1621375424782, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336192.65204691613, "lr": 0.25476646706586825, "loss": 5.210805855299297}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621375424782, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336192.65204691613, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375424782, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621375424782, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.313 [sec],avg speed: 373154.066 [imgs/sec],loss=4.760
[Training][Epoch 27] training time: 0.313 [sec],avg speed: 373154.066 [imgs/sec],loss=4.760
:::MLLOG {"namespace": "", "time_ms": 1621375425095, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373154.0662114777, "lr": 0.2645748502994012, "loss": 4.760022750026302}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621375425096, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373154.0662114777, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375425096, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621375425096, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Epoch 28] training time: 0.327 [sec],avg speed: 357390.135 [imgs/sec],loss=4.715
[Training][Epoch 28] training time: 0.327 [sec],avg speed: 357390.135 [imgs/sec],loss=4.715
:::MLLOG {"namespace": "", "time_ms": 1621375425423, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357390.1348856391, "lr": 0.27438323353293415, "loss": 4.714586910448577}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621375425423, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357390.1348856391, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375425423, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621375425423, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 8.134 [ms], speed: 377670.848 [imgs/sec], loss=7.792
[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 8.134 [ms], speed: 377670.848 [imgs/sec], loss=7.792
:::MLLOG {"namespace": "", "time_ms": 1621375425488, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377670.84754556045, "loss": 7.792078018188477}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [29, 1100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375425488, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377670.84754556045, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621375425531, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375425531, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.10713262579986244, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 25}}
INFO:root:[Training][Epoch 29] training time: 0.313 [sec],avg speed: 373411.615 [imgs/sec],loss=4.944
[Training][Epoch 29] training time: 0.313 [sec],avg speed: 373411.615 [imgs/sec],loss=4.944
:::MLLOG {"namespace": "", "time_ms": 1621375425736, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373411.61521143606, "lr": 0.2841916167664671, "loss": 4.943557563580964}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621375425736, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373411.61521143606, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375425736, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621375425736, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Epoch 30] training time: 0.321 [sec],avg speed: 363935.910 [imgs/sec],loss=4.738
[Training][Epoch 30] training time: 0.321 [sec],avg speed: 363935.910 [imgs/sec],loss=4.738
:::MLLOG {"namespace": "", "time_ms": 1621375426057, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363935.91009124665, "lr": 0.29400000000000004, "loss": 4.7378336442144295}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375426057, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363935.91009124665, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375426057, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375426067, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 30}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 42.483 [ms], allgather: 46.001 [ms], asnumpy: 5.160 [ms], speed: 53393.079 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 42.483 [ms], allgather: 46.001 [ms], asnumpy: 5.160 [ms], speed: 53393.079 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375426162, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 10.843 [ms], speed: 283323.101 [imgs/sec], loss=3.296
[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 10.843 [ms], speed: 283323.101 [imgs/sec], loss=3.296
:::MLLOG {"namespace": "", "time_ms": 1621375426487, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 283323.10120769637, "loss": 3.2955944538116455}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [31, 1200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375426487, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 283323.10120769637, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 31] training time: 0.390 [sec],avg speed: 299236.287 [imgs/sec],loss=4.494
[Training][Epoch 31] training time: 0.390 [sec],avg speed: 299236.287 [imgs/sec],loss=4.494
:::MLLOG {"namespace": "", "time_ms": 1621375426552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 299236.286652492, "lr": 0.30380838323353293, "loss": 4.49408862779015}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621375426552, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 299236.286652492, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375426552, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621375426552, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Epoch 32] training time: 0.367 [sec],avg speed: 318081.448 [imgs/sec],loss=4.798
[Training][Epoch 32] training time: 0.367 [sec],avg speed: 318081.448 [imgs/sec],loss=4.798
:::MLLOG {"namespace": "", "time_ms": 1621375426919, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 318081.4479621077, "lr": 0.3136167664670659, "loss": 4.798454836795204}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621375426920, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 318081.4479621077, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375426920, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621375426920, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 33, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375427158, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375427158, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.12601547573920055, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 30}}
INFO:root:[Training][Epoch 33] training time: 0.312 [sec],avg speed: 373720.288 [imgs/sec],loss=4.499
[Training][Epoch 33] training time: 0.312 [sec],avg speed: 373720.288 [imgs/sec],loss=4.499
:::MLLOG {"namespace": "", "time_ms": 1621375427232, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373720.2879262614, "lr": 0.3234251497005988, "loss": 4.498693958709114}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621375427232, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373720.2879262614, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375427232, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621375427233, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 9.526 [ms], speed: 322479.135 [imgs/sec], loss=5.547
[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 9.526 [ms], speed: 322479.135 [imgs/sec], loss=5.547
:::MLLOG {"namespace": "", "time_ms": 1621375427357, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 322479.13470472157, "loss": 5.547233581542969}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [34, 1300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375427357, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 322479.13470472157, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 34] training time: 0.329 [sec],avg speed: 354730.186 [imgs/sec],loss=4.704
[Training][Epoch 34] training time: 0.329 [sec],avg speed: 354730.186 [imgs/sec],loss=4.704
:::MLLOG {"namespace": "", "time_ms": 1621375427562, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354730.18605237495, "lr": 0.33323353293413177, "loss": 4.703823666823538}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621375427562, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354730.18605237495, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375427562, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621375427562, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Epoch 35] training time: 0.321 [sec],avg speed: 363212.382 [imgs/sec],loss=4.294
[Training][Epoch 35] training time: 0.321 [sec],avg speed: 363212.382 [imgs/sec],loss=4.294
:::MLLOG {"namespace": "", "time_ms": 1621375427884, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363212.38160178746, "lr": 0.336, "loss": 4.293794933118318}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375427884, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363212.38160178746, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375427884, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375427894, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 35}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.865 [ms], allgather: 28.236 [ms], asnumpy: 4.217 [ms], speed: 68194.964 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.865 [ms], allgather: 28.236 [ms], asnumpy: 4.217 [ms], speed: 68194.964 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375427968, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.956 [ms], speed: 343003.106 [imgs/sec], loss=3.569
[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.956 [ms], speed: 343003.106 [imgs/sec], loss=3.569
:::MLLOG {"namespace": "", "time_ms": 1621375428282, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343003.1062981166, "loss": 3.5690510272979736}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [36, 1400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375428282, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343003.1062981166, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 36] training time: 0.339 [sec],avg speed: 344696.785 [imgs/sec],loss=4.502
[Training][Epoch 36] training time: 0.339 [sec],avg speed: 344696.785 [imgs/sec],loss=4.502
:::MLLOG {"namespace": "", "time_ms": 1621375428307, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344696.7850048048, "lr": 0.336, "loss": 4.502498300451982}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621375428307, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344696.7850048048, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375428307, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621375428307, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Epoch 37] training time: 0.325 [sec],avg speed: 359403.838 [imgs/sec],loss=4.176
[Training][Epoch 37] training time: 0.325 [sec],avg speed: 359403.838 [imgs/sec],loss=4.176
:::MLLOG {"namespace": "", "time_ms": 1621375428632, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359403.8383855882, "lr": 0.336, "loss": 4.175776928663254}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621375428632, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359403.8383855882, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375428632, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621375428633, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 38, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375428831, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375428832, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.11924010273529252, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 35}}
INFO:root:[Training][Epoch 38] training time: 0.345 [sec],avg speed: 338132.451 [imgs/sec],loss=4.422
[Training][Epoch 38] training time: 0.345 [sec],avg speed: 338132.451 [imgs/sec],loss=4.422
:::MLLOG {"namespace": "", "time_ms": 1621375428978, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338132.45140746294, "lr": 0.336, "loss": 4.4223424823660595}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621375428978, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338132.45140746294, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375428978, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621375428978, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 8.282 [ms], speed: 370911.291 [imgs/sec], loss=4.181
[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 8.282 [ms], speed: 370911.291 [imgs/sec], loss=4.181
:::MLLOG {"namespace": "", "time_ms": 1621375429128, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370911.2911611037, "loss": 4.181090831756592}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [39, 1500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375429128, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370911.2911611037, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 39] training time: 0.316 [sec],avg speed: 368943.685 [imgs/sec],loss=4.307
[Training][Epoch 39] training time: 0.316 [sec],avg speed: 368943.685 [imgs/sec],loss=4.307
:::MLLOG {"namespace": "", "time_ms": 1621375429295, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368943.68541401834, "lr": 0.336, "loss": 4.30696447899467}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621375429295, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368943.68541401834, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375429295, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621375429295, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Epoch 40] training time: 0.309 [sec],avg speed: 377613.613 [imgs/sec],loss=4.129
[Training][Epoch 40] training time: 0.309 [sec],avg speed: 377613.613 [imgs/sec],loss=4.129
:::MLLOG {"namespace": "", "time_ms": 1621375429605, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377613.612906659, "lr": 0.336, "loss": 4.1285358604631925}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375429605, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377613.612906659, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375429605, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375429615, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.467 [ms], allgather: 29.128 [ms], asnumpy: 5.069 [ms], speed: 66079.920 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.467 [ms], allgather: 29.128 [ms], asnumpy: 5.069 [ms], speed: 66079.920 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375429694, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.349 [sec],avg speed: 334748.741 [imgs/sec],loss=4.149
[Training][Epoch 41] training time: 0.349 [sec],avg speed: 334748.741 [imgs/sec],loss=4.149
:::MLLOG {"namespace": "", "time_ms": 1621375430043, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 334748.741166143, "lr": 0.336, "loss": 4.148973527707551}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621375430043, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 334748.741166143, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375430043, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621375430043, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.108 [ms], speed: 337301.097 [imgs/sec], loss=3.522
[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.108 [ms], speed: 337301.097 [imgs/sec], loss=3.522
:::MLLOG {"namespace": "", "time_ms": 1621375430052, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 337301.0965445026, "loss": 3.52154541015625}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [42, 1600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375430053, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 337301.0965445026, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 42] training time: 0.341 [sec],avg speed: 342630.804 [imgs/sec],loss=4.186
[Training][Epoch 42] training time: 0.341 [sec],avg speed: 342630.804 [imgs/sec],loss=4.186
:::MLLOG {"namespace": "", "time_ms": 1621375430384, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342630.8041482974, "lr": 0.336, "loss": 4.1862880085643965}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621375430384, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342630.8041482974, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375430384, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621375430384, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 43, "current_iter_num": 0}}
loading annotations into memory...
Done (t=0.12s)
creating index...
Loading and preparing results...
DONE (t=0.16s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.60s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.01630
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.03627
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.01207
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.04105
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.03430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.04535
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.04693
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.04693
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.67s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.04555
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.10235
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.03242
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.09619
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.07400
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.10285
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.10689
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10689
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.22s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.59s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.08060
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.16513
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.07109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.14481
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.11199
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.15653
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16276
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.16276
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.74s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.10713
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.21572
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.09667
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19742
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.13820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.19971
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.30s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.66s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12602
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.24092
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.12185
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20450
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.15050
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.21436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22357
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22357
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.60s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11924
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.23215
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.11162
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20066
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14284
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20723
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.30s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14604
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27341
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.14266
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22764
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16463
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23365
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24246
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24246
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000:::MLLOG {"namespace": "", "time_ms": 1621375430703, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375430703, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1460445053517015, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 40}}
INFO:root:[Training][Epoch 43] training time: 0.336 [sec],avg speed: 347514.667 [imgs/sec],loss=4.219
[Training][Epoch 43] training time: 0.336 [sec],avg speed: 347514.667 [imgs/sec],loss=4.219
:::MLLOG {"namespace": "", "time_ms": 1621375430720, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347514.6665493205, "lr": 0.336, "loss": 4.218863336663497}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621375430721, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347514.6665493205, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375430721, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621375430721, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 44, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.335 [ms], speed: 368576.852 [imgs/sec], loss=3.316
[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.335 [ms], speed: 368576.852 [imgs/sec], loss=3.316
:::MLLOG {"namespace": "", "time_ms": 1621375430913, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368576.8518517597, "loss": 3.3160324096679688}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [44, 1700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375430913, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368576.8518517597, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 44] training time: 0.317 [sec],avg speed: 368419.277 [imgs/sec],loss=4.167
[Training][Epoch 44] training time: 0.317 [sec],avg speed: 368419.277 [imgs/sec],loss=4.167
:::MLLOG {"namespace": "", "time_ms": 1621375431038, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368419.27697382675, "lr": 0.336, "loss": 4.167146064733204}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621375431038, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368419.27697382675, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375431038, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621375431038, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Epoch 45] training time: 0.356 [sec],avg speed: 328205.358 [imgs/sec],loss=3.975
[Training][Epoch 45] training time: 0.356 [sec],avg speed: 328205.358 [imgs/sec],loss=3.975
:::MLLOG {"namespace": "", "time_ms": 1621375431394, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 328205.35848545644, "lr": 0.336, "loss": 3.975025961273595}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375431394, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 328205.35848545644, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375431394, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375431404, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 45}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.303 [ms], allgather: 61.925 [ms], asnumpy: 4.723 [ms], speed: 46316.933 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.303 [ms], allgather: 61.925 [ms], asnumpy: 4.723 [ms], speed: 46316.933 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375431515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.329 [sec],avg speed: 355040.398 [imgs/sec],loss=4.062
[Training][Epoch 46] training time: 0.329 [sec],avg speed: 355040.398 [imgs/sec],loss=4.062
:::MLLOG {"namespace": "", "time_ms": 1621375431844, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355040.3979951736, "lr": 0.336, "loss": 4.062496982122722}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621375431844, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355040.3979951736, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375431844, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621375431844, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 10.734 [ms], speed: 286183.821 [imgs/sec], loss=5.133
[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 10.734 [ms], speed: 286183.821 [imgs/sec], loss=5.133
:::MLLOG {"namespace": "", "time_ms": 1621375431909, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 286183.82139565184, "loss": 5.1327805519104}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [47, 1800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375431909, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 286183.82139565184, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 47] training time: 0.393 [sec],avg speed: 297179.779 [imgs/sec],loss=3.988
[Training][Epoch 47] training time: 0.393 [sec],avg speed: 297179.779 [imgs/sec],loss=3.988
:::MLLOG {"namespace": "", "time_ms": 1621375432237, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 297179.77910821716, "lr": 0.336, "loss": 3.9884600607972396}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621375432237, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 297179.77910821716, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375432237, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621375432238, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 48, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375432447, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375432447, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.16975786185978925, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 45}}
INFO:root:[Training][Epoch 48] training time: 0.346 [sec],avg speed: 337803.287 [imgs/sec],loss=3.639
[Training][Epoch 48] training time: 0.346 [sec],avg speed: 337803.287 [imgs/sec],loss=3.639
:::MLLOG {"namespace": "", "time_ms": 1621375432583, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 337803.2868814344, "lr": 0.336, "loss": 3.638929602346922}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621375432583, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 337803.2868814344, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375432583, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621375432584, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.530 [ms], speed: 360132.615 [imgs/sec], loss=4.518
[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.530 [ms], speed: 360132.615 [imgs/sec], loss=4.518
:::MLLOG {"namespace": "", "time_ms": 1621375432823, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360132.6154822867, "loss": 4.517924785614014}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [49, 1900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375432823, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360132.6154822867, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 49] training time: 0.323 [sec],avg speed: 361845.573 [imgs/sec],loss=3.976
[Training][Epoch 49] training time: 0.323 [sec],avg speed: 361845.573 [imgs/sec],loss=3.976
:::MLLOG {"namespace": "", "time_ms": 1621375432906, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361845.5733525677, "lr": 0.336, "loss": 3.9755313270970394}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621375432907, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361845.5733525677, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375432907, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621375432907, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Epoch 50] training time: 0.336 [sec],avg speed: 346985.914 [imgs/sec],loss=3.935
[Training][Epoch 50] training time: 0.336 [sec],avg speed: 346985.914 [imgs/sec],loss=3.935
:::MLLOG {"namespace": "", "time_ms": 1621375433243, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 346985.914193627, "lr": 0.336, "loss": 3.9345344116813257}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375433243, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 346985.914193627, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375433244, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375433254, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.026 [ms], allgather: 29.246 [ms], asnumpy: 4.971 [ms], speed: 64729.910 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.026 [ms], allgather: 29.246 [ms], asnumpy: 4.971 [ms], speed: 64729.910 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375433334, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.336 [sec],avg speed: 347685.679 [imgs/sec],loss=4.090
[Training][Epoch 51] training time: 0.336 [sec],avg speed: 347685.679 [imgs/sec],loss=4.090
:::MLLOG {"namespace": "", "time_ms": 1621375433669, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347685.6792885324, "lr": 0.336, "loss": 4.090126658740797}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621375433670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347685.6792885324, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375433670, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621375433670, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.569 [ms], speed: 358521.436 [imgs/sec], loss=5.126
[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.569 [ms], speed: 358521.436 [imgs/sec], loss=5.126
:::MLLOG {"namespace": "", "time_ms": 1621375433764, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358521.43598875875, "loss": 5.126248836517334}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [52, 2000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375433764, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358521.43598875875, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 52] training time: 0.316 [sec],avg speed: 369565.800 [imgs/sec],loss=3.950
[Training][Epoch 52] training time: 0.316 [sec],avg speed: 369565.800 [imgs/sec],loss=3.950
:::MLLOG {"namespace": "", "time_ms": 1621375433986, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369565.7998971974, "lr": 0.336, "loss": 3.9502092097934924}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621375433986, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369565.7998971974, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375433986, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621375433986, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 53, "current_iter_num": 0}}
INFO:root:[Training][Epoch 53] training time: 0.324 [sec],avg speed: 359903.143 [imgs/sec],loss=4.182
[Training][Epoch 53] training time: 0.324 [sec],avg speed: 359903.143 [imgs/sec],loss=4.182
:::MLLOG {"namespace": "", "time_ms": 1621375434311, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359903.1428413916, "lr": 0.336, "loss": 4.181989101987136}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621375434311, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359903.1428413916, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375434311, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621375434311, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 54, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375434320, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375434320, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17594047749255626, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 50}}
INFO:root:[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.358 [ms], speed: 367533.544 [imgs/sec], loss=4.705
[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.358 [ms], speed: 367533.544 [imgs/sec], loss=4.705
:::MLLOG {"namespace": "", "time_ms": 1621375434587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367533.5440424719, "loss": 4.70548152923584}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [54, 2100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375434587, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367533.5440424719, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 54] training time: 0.317 [sec],avg speed: 368000.324 [imgs/sec],loss=3.739
[Training][Epoch 54] training time: 0.317 [sec],avg speed: 368000.324 [imgs/sec],loss=3.739
:::MLLOG {"namespace": "", "time_ms": 1621375434629, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368000.32449633785, "lr": 0.336, "loss": 3.739224120190269}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621375434629, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368000.32449633785, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375434629, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621375434629, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.316 [sec],avg speed: 369258.936 [imgs/sec],loss=4.001
[Training][Epoch 55] training time: 0.316 [sec],avg speed: 369258.936 [imgs/sec],loss=4.001
:::MLLOG {"namespace": "", "time_ms": 1621375434945, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369258.9362836263, "lr": 0.336, "loss": 4.000805945772874}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375434946, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369258.9362836263, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375434946, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375434957, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.932 [ms], allgather: 28.103 [ms], asnumpy: 4.177 [ms], speed: 69239.902 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.932 [ms], allgather: 28.103 [ms], asnumpy: 4.177 [ms], speed: 69239.902 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375435031, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Epoch 56] training time: 0.436 [sec],avg speed: 267646.164 [imgs/sec],loss=3.810
[Training][Epoch 56] training time: 0.436 [sec],avg speed: 267646.164 [imgs/sec],loss=3.810
:::MLLOG {"namespace": "", "time_ms": 1621375435468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 267646.1639408783, "lr": 0.336, "loss": 3.81014547222539}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621375435468, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 267646.1639408783, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375435468, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621375435468, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 9.930 [ms], speed: 309355.355 [imgs/sec], loss=2.521
[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 9.930 [ms], speed: 309355.355 [imgs/sec], loss=2.521
:::MLLOG {"namespace": "", "time_ms": 1621375435627, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 309355.35502458684, "loss": 2.52073073387146}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [57, 2200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375435627, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 309355.35502458684, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 57] training time: 0.365 [sec],avg speed: 320215.998 [imgs/sec],loss=3.711
[Training][Epoch 57] training time: 0.365 [sec],avg speed: 320215.998 [imgs/sec],loss=3.711
:::MLLOG {"namespace": "", "time_ms": 1621375435833, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 320215.9980013734, "lr": 0.336, "loss": 3.711089404005753}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621375435833, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 320215.9980013734, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375435833, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621375435833, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 58, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375435868, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375435868, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18020220931194955, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 55}}
INFO:root:[Training][Epoch 58] training time: 0.357 [sec],avg speed: 326791.146 [imgs/sec],loss=3.834
[Training][Epoch 58] training time: 0.357 [sec],avg speed: 326791.146 [imgs/sec],loss=3.834
:::MLLOG {"namespace": "", "time_ms": 1621375436190, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326791.1457059238, "lr": 0.336, "loss": 3.8344754137490926}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621375436191, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326791.1457059238, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375436191, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621375436191, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 59, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 9.075 [ms], speed: 338521.930 [imgs/sec], loss=5.995
[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 9.075 [ms], speed: 338521.930 [imgs/sec], loss=5.995
:::MLLOG {"namespace": "", "time_ms": 1621375436536, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338521.93031772756, "loss": 5.9952826499938965}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [59, 2300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375436536, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338521.93031772756, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 59] training time: 0.345 [sec],avg speed: 338146.930 [imgs/sec],loss=3.686
[Training][Epoch 59] training time: 0.345 [sec],avg speed: 338146.930 [imgs/sec],loss=3.686
:::MLLOG {"namespace": "", "time_ms": 1621375436536, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338146.92976438033, "lr": 0.336, "loss": 3.6859032982274105}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621375436536, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338146.92976438033, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375436537, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621375436537, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.321 [sec],avg speed: 364046.583 [imgs/sec],loss=3.937
[Training][Epoch 60] training time: 0.321 [sec],avg speed: 364046.583 [imgs/sec],loss=3.937
:::MLLOG {"namespace": "", "time_ms": 1621375436857, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364046.58278083656, "lr": 0.336, "loss": 3.9365230641866984}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375436858, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364046.58278083656, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375436858, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375436868, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.348 [ms], allgather: 28.747 [ms], asnumpy: 4.342 [ms], speed: 67169.047 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.348 [ms], allgather: 28.747 [ms], asnumpy: 4.342 [ms], speed: 67169.047 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375436943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Epoch 61] training time: 0.322 [sec],avg speed: 362260.270 [imgs/sec],loss=3.786
[Training][Epoch 61] training time: 0.322 [sec],avg speed: 362260.270 [imgs/sec],loss=3.786
:::MLLOG {"namespace": "", "time_ms": 1621375437266, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362260.27014465217, "lr": 0.336, "loss": 3.786455505772641}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621375437266, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362260.27014465217, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375437266, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621375437266, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 12.420 [ms], speed: 247337.426 [imgs/sec], loss=3.854
[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 12.420 [ms], speed: 247337.426 [imgs/sec], loss=3.854
:::MLLOG {"namespace": "", "time_ms": 1621375437527, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 247337.42631101215, "loss": 3.8535239696502686}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [62, 2400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375437527, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 247337.42631101215, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 62] training time: 0.411 [sec],avg speed: 284165.183 [imgs/sec],loss=3.431
[Training][Epoch 62] training time: 0.411 [sec],avg speed: 284165.183 [imgs/sec],loss=3.431
:::MLLOG {"namespace": "", "time_ms": 1621375437677, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 284165.1828948239, "lr": 0.336, "loss": 3.4307621027293957}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621375437677, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 284165.1828948239, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375437677, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621375437677, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 63, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375437812, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375437813, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17770172794686526, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.345 [sec],avg speed: 338085.755 [imgs/sec],loss=3.730
[Training][Epoch 63] training time: 0.345 [sec],avg speed: 338085.755 [imgs/sec],loss=3.730
:::MLLOG {"namespace": "", "time_ms": 1621375438023, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338085.7554796162, "lr": 0.336, "loss": 3.730269886945423}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621375438023, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338085.7554796162, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375438023, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621375438023, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Epoch 64] training time: 0.342 [sec],avg speed: 340947.801 [imgs/sec],loss=3.970
[Training][Epoch 64] training time: 0.342 [sec],avg speed: 340947.801 [imgs/sec],loss=3.970
:::MLLOG {"namespace": "", "time_ms": 1621375438366, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 340947.8005618095, "lr": 0.336, "loss": 3.969880649918004}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621375438366, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 340947.8005618095, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375438366, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621375438366, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 8.346 [ms], speed: 368087.470 [imgs/sec], loss=2.201
[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 8.346 [ms], speed: 368087.470 [imgs/sec], loss=2.201
:::MLLOG {"namespace": "", "time_ms": 1621375438400, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368087.4700185688, "loss": 2.2014715671539307}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [65, 2500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375438400, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368087.4700185688, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 65] training time: 0.314 [sec],avg speed: 371280.304 [imgs/sec],loss=3.897
[Training][Epoch 65] training time: 0.314 [sec],avg speed: 371280.304 [imgs/sec],loss=3.897
:::MLLOG {"namespace": "", "time_ms": 1621375438681, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371280.3036691536, "lr": 0.336, "loss": 3.897098993000231}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375438681, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371280.3036691536, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375438681, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375438691, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.100 [ms], allgather: 29.285 [ms], asnumpy: 4.604 [ms], speed: 66675.526 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.100 [ms], allgather: 29.285 [ms], asnumpy: 4.604 [ms], speed: 66675.526 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375438768, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Training][Epoch 66] training time: 0.316 [sec],avg speed: 369502.211 [imgs/sec],loss=3.649
[Training][Epoch 66] training time: 0.316 [sec],avg speed: 369502.211 [imgs/sec],loss=3.649
:::MLLOG {"namespace": "", "time_ms": 1621375439084, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369502.2113430187, "lr": 0.336, "loss": 3.6485847924884998}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621375439085, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369502.2113430187, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375439085, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621375439085, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.414 [ms], speed: 365106.063 [imgs/sec], loss=4.353
[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.414 [ms], speed: 365106.063 [imgs/sec], loss=4.353
:::MLLOG {"namespace": "", "time_ms": 1621375439304, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365106.06268350256, "loss": 4.352566719055176}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [67, 2600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375439304, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365106.06268350256, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 67] training time: 0.319 [sec],avg speed: 365569.250 [imgs/sec],loss=3.696
[Training][Epoch 67] training time: 0.319 [sec],avg speed: 365569.250 [imgs/sec],loss=3.696
:::MLLOG {"namespace": "", "time_ms": 1621375439404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365569.2500363982, "lr": 0.336, "loss": 3.6958997437828467}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621375439405, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365569.2500363982, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375439405, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621375439405, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 68, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375439680, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375439680, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18800232493691527, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 65}}
INFO:root:[Training][Epoch 68] training time: 0.332 [sec],avg speed: 351632.873 [imgs/sec],loss=3.833
[Training][Epoch 68] training time: 0.332 [sec],avg speed: 351632.873 [imgs/sec],loss=3.833
:::MLLOG {"namespace": "", "time_ms": 1621375439737, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351632.87342757586, "lr": 0.336, "loss": 3.8334774531816183}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621375439737, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351632.87342757586, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375439737, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621375439737, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 69, "current_iter_num": 0}}
INFO:root:[Training][Epoch 69] training time: 0.314 [sec],avg speed: 371626.638 [imgs/sec],loss=3.365
[Training][Epoch 69] training time: 0.314 [sec],avg speed: 371626.638 [imgs/sec],loss=3.365
:::MLLOG {"namespace": "", "time_ms": 1621375440052, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371626.63829825993, "lr": 0.033600000000000005, "loss": 3.365160245644419}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621375440052, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371626.63829825993, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375440052, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621375440052, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 70, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 8.055 [ms], speed: 381390.655 [imgs/sec], loss=4.268
[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 8.055 [ms], speed: 381390.655 [imgs/sec], loss=4.268
:::MLLOG {"namespace": "", "time_ms": 1621375440125, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 381390.6549846081, "loss": 4.267706871032715}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [70, 2700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375440125, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 381390.6549846081, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 70] training time: 0.329 [sec],avg speed: 355194.419 [imgs/sec],loss=3.299
[Training][Epoch 70] training time: 0.329 [sec],avg speed: 355194.419 [imgs/sec],loss=3.299
:::MLLOG {"namespace": "", "time_ms": 1621375440381, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355194.4191504519, "lr": 0.033600000000000005, "loss": 3.299328182872973}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375440381, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355194.4191504519, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375440381, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375440391, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 70}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.887 [ms], allgather: 43.062 [ms], asnumpy: 4.413 [ms], speed: 56585.118 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.887 [ms], allgather: 43.062 [ms], asnumpy: 4.413 [ms], speed: 56585.118 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375440482, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 71, "current_iter_num": 0}}
INFO:root:[Training][Epoch 71] training time: 0.325 [sec],avg speed: 358779.944 [imgs/sec],loss=3.527
[Training][Epoch 71] training time: 0.325 [sec],avg speed: 358779.944 [imgs/sec],loss=3.527
:::MLLOG {"namespace": "", "time_ms": 1621375440808, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358779.9438000202, "lr": 0.033600000000000005, "loss": 3.5273820193190324}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621375440808, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358779.9438000202, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375440808, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621375440808, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 72, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.830 [ms], speed: 347909.668 [imgs/sec], loss=5.269
[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.830 [ms], speed: 347909.668 [imgs/sec], loss=5.269
:::MLLOG {"namespace": "", "time_ms": 1621375441082, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347909.6678991474, "loss": 5.268677234649658}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [72, 2800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375441082, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347909.6678991474, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 72] training time: 0.357 [sec],avg speed: 327131.096 [imgs/sec],loss=3.609
[Training][Epoch 72] training time: 0.357 [sec],avg speed: 327131.096 [imgs/sec],loss=3.609
:::MLLOG {"namespace": "", "time_ms": 1621375441165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327131.0964610804, "lr": 0.033600000000000005, "loss": 3.6094993133293953}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621375441165, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327131.0964610804, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375441165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621375441166, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 73, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375441346, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375441346, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2251589657263425, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 70}}
INFO:root:[Training][Epoch 73] training time: 0.333 [sec],avg speed: 350442.196 [imgs/sec],loss=3.415
[Training][Epoch 73] training time: 0.333 [sec],avg speed: 350442.196 [imgs/sec],loss=3.415
:::MLLOG {"namespace": "", "time_ms": 1621375441499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350442.1960610292, "lr": 0.033600000000000005, "loss": 3.415179324777503}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621375441499, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350442.1960610292, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375441499, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621375441499, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 74, "current_iter_num": 0}}
INFO:root:[Training][Epoch 74] training time: 0.342 [sec],avg speed: 341093.161 [imgs/sec],loss=3.120
[Training][Epoch 74] training time: 0.342 [sec],avg speed: 341093.161 [imgs/sec],loss=3.120
:::MLLOG {"namespace": "", "time_ms": 1621375441842, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341093.16146578593, "lr": 0.033600000000000005, "loss": 3.119600945397427}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621375441842, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341093.16146578593, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375441842, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621375441842, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 75, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.335 [ms], speed: 368550.725 [imgs/sec], loss=3.409
[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.335 [ms], speed: 368550.725 [imgs/sec], loss=3.409
:::MLLOG {"namespace": "", "time_ms": 1621375441959, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368550.7247504362, "loss": 3.4093830585479736}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [75, 2900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375441959, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368550.7247504362, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 75] training time: 0.314 [sec],avg speed: 371990.011 [imgs/sec],loss=3.232
[Training][Epoch 75] training time: 0.314 [sec],avg speed: 371990.011 [imgs/sec],loss=3.232
:::MLLOG {"namespace": "", "time_ms": 1621375442156, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371990.01070781436, "lr": 0.033600000000000005, "loss": 3.232359446977314}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375442156, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371990.01070781436, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375442156, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375442167, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 75}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.307 [ms], allgather: 27.879 [ms], asnumpy: 4.369 [ms], speed: 68912.497 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.307 [ms], allgather: 27.879 [ms], asnumpy: 4.369 [ms], speed: 68912.497 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375442241, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 76, "current_iter_num": 0}}
INFO:root:[Training][Epoch 76] training time: 0.338 [sec],avg speed: 345192.537 [imgs/sec],loss=3.274
[Training][Epoch 76] training time: 0.338 [sec],avg speed: 345192.537 [imgs/sec],loss=3.274
:::MLLOG {"namespace": "", "time_ms": 1621375442579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 345192.53655946953, "lr": 0.033600000000000005, "loss": 3.274234414100647}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621375442579, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 345192.53655946953, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375442579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621375442579, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 77, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 8.513 [ms], speed: 360866.868 [imgs/sec], loss=3.950
[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 8.513 [ms], speed: 360866.868 [imgs/sec], loss=3.950
:::MLLOG {"namespace": "", "time_ms": 1621375442886, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360866.86813625385, "loss": 3.950352430343628}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [77, 3000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375442886, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360866.86813625385, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 77] training time: 0.324 [sec],avg speed: 360509.186 [imgs/sec],loss=3.444
[Training][Epoch 77] training time: 0.324 [sec],avg speed: 360509.186 [imgs/sec],loss=3.444
:::MLLOG {"namespace": "", "time_ms": 1621375442903, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360509.18582308904, "lr": 0.033600000000000005, "loss": 3.4438944992266203}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621375442903, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360509.18582308904, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375442903, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621375442904, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 78, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375443098, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375443098, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23013743063339642, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 75}}
INFO:root:[Training][Epoch 78] training time: 0.400 [sec],avg speed: 292004.754 [imgs/sec],loss=3.208
[Training][Epoch 78] training time: 0.400 [sec],avg speed: 292004.754 [imgs/sec],loss=3.208
:::MLLOG {"namespace": "", "time_ms": 1621375443304, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 292004.7542121036, "lr": 0.033600000000000005, "loss": 3.208045388522901}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621375443304, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 292004.7542121036, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375443304, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621375443304, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 547, "status": "success"}}
INFO:root:Rank 0 done. map=23.013743063339643 @ epoch=75
Rank 0 done. map=23.013743063339643 @ epoch=75

Loading and preparing results...
DONE (t=0.27s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.64s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16976
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31062
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16909
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25103
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18178
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25685
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26566
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26566
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.29s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.67s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17594
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32232
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17414
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25753
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26402
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27377
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27377
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.59s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18020
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32841
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17993
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26959
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18794
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27336
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.60s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17770
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32149
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17568
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26138
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26813
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.62s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18800
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34100
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18787
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19299
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27685
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.61s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22516
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38306
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.22997
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30510
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21773
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31048
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32170
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32170
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.60s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23014
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38969
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23495
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30964
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22076
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31489
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32601
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32601
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:15 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:16 PM
RESULT,SINGLE_STAGE_DETECTOR,,444,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
ENDING TIMING RUN AT 2021-05-18 03:04:17 PM
RESULT,SINGLE_STAGE_DETECTOR,,445,nvidia,2021-05-18 02:56:52 PM
